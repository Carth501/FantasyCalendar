{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/calendar-event.service.ts","webpack:///src/app/calendar.service.ts","webpack:///src/app/components/calendar-selector/calendar-selector.component.ts","webpack:///src/app/components/calendar-selector/calendar-selector.component.html","webpack:///src/app/components/calendar/calendar.component.ts","webpack:///src/app/components/calendar/calendar.component.html","webpack:///src/app/components/day/day.component.ts","webpack:///src/app/components/day/day.component.html","webpack:///src/app/components/event/event.component.ts","webpack:///src/app/components/event/event.component.html","webpack:///src/app/components/month/month.component.ts","webpack:///src/app/components/month/month.component.html","webpack:///src/app/components/new-event/new-event.component.ts","webpack:///src/app/components/new-event/new-event.component.html","webpack:///src/app/components/options/options.component.ts","webpack:///src/app/components/options/options.component.html","webpack:///src/app/components/options/optionsSubsections/events-editor/events-editor.component.ts","webpack:///src/app/components/options/optionsSubsections/events-editor/events-editor.component.html","webpack:///src/app/components/options/optionsSubsections/json/json.component.ts","webpack:///src/app/components/options/optionsSubsections/json/json.component.html","webpack:///src/app/components/options/optionsSubsections/leap-year-editor/leap-year-editor.component.ts","webpack:///src/app/components/options/optionsSubsections/leap-year-editor/leap-year-editor.component.html","webpack:///src/app/components/options/optionsSubsections/month-editor/month-editor.component.ts","webpack:///src/app/components/options/optionsSubsections/month-editor/month-editor.component.html","webpack:///src/app/components/options/optionsSubsections/new-era/new-era.component.ts","webpack:///src/app/components/options/optionsSubsections/new-era/new-era.component.html","webpack:///src/app/components/options/optionsSubsections/new-leap-year-rule/new-leap-year-rule.component.ts","webpack:///src/app/components/options/optionsSubsections/new-leap-year-rule/new-leap-year-rule.component.html","webpack:///src/app/components/options/optionsSubsections/week-editor/week-editor.component.ts","webpack:///src/app/components/options/optionsSubsections/week-editor/week-editor.component.html","webpack:///src/app/components/options/optionsSubsections/year-editor/year-editor.component.ts","webpack:///src/app/components/options/optionsSubsections/year-editor/year-editor.component.html","webpack:///src/app/components/view/view.component.ts","webpack:///src/app/components/view/view.component.html","webpack:///src/app/components/week/week.component.ts","webpack:///src/app/components/week/week.component.html","webpack:///src/app/components/year/year.component.ts","webpack:///src/app/components/year/year.component.html","webpack:///src/app/era.ts","webpack:///src/app/event field components/cyclical-fields/cyclical-fields.component.ts","webpack:///src/app/event field components/cyclical-fields/cyclical-fields.component.html","webpack:///src/app/event field components/month-dow-fields/month-dow-fields.component.ts","webpack:///src/app/event field components/month-dow-fields/month-dow-fields.component.html","webpack:///src/app/event field components/monthly-fields/monthly-fields.component.ts","webpack:///src/app/event field components/monthly-fields/monthly-fields.component.html","webpack:///src/app/event field components/unique-fields/unique-fields.component.ts","webpack:///src/app/event field components/unique-fields/unique-fields.component.html","webpack:///src/app/event field components/weekly-fields/weekly-fields.component.ts","webpack:///src/app/event field components/weekly-fields/weekly-fields.component.html","webpack:///src/app/event field components/year-month-dow-fields/year-month-dow-fields.component.ts","webpack:///src/app/event field components/year-month-dow-fields/year-month-dow-fields.component.html","webpack:///src/app/event field components/year-monthly-fields/year-monthly-fields.component.ts","webpack:///src/app/event field components/year-monthly-fields/year-monthly-fields.component.html","webpack:///src/app/event field components/yearly-fields/yearly-fields.component.ts","webpack:///src/app/event field components/yearly-fields/yearly-fields.component.html","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/json.service.ts","webpack:///src/app/key-value-pairs.service.ts","webpack:///src/app/leapYear.ts","webpack:///src/app/month.service.ts","webpack:///src/app/store/actions/calendar.actions.ts","webpack:///src/app/store/actions/index.ts","webpack:///src/app/store/actions/options.actions.ts","webpack:///src/app/store/actions/view.actions.ts","webpack:///src/app/store/effects/calendar.effects.ts","webpack:///src/app/store/effects/options.effects.ts","webpack:///src/app/store/reducers/calendar.reducer.ts","webpack:///src/app/store/reducers/options.reducer.ts","webpack:///src/app/store/reducers/view.reducer.ts","webpack:///src/app/store/selectors/calendar.selector.ts","webpack:///src/app/store/selectors/index.ts","webpack:///src/app/store/selectors/options.selector.ts","webpack:///src/app/store/selectors/view.selector.ts","webpack:///src/app/year.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","dataEncapsulation","view","calendar","options","instrument","maxAge","logOnly","production","declarations","providers","bootstrap","CalendarEventService","dayClicks","dayclick$","asObservable","dayID","next","providedIn","CalendarService","http","store","calenderSettingsURL","get","getCalendarList$","getCurrentCalendarID$","pipe","list","length","find","calendarID","select","CalendarSelectorComponent","switchTo","activeCalendar$","change","dispatch","calendarIndex","value","changeCalendar","CalendarComponent","yearService","faArrowAltCircleLeft","faArrowAltCircleRight","settingsLoaded","eventsLoaded","userYearChange","userYearChangeSubscription","subscribe","jumpToYear","unsubscribe","IncomingSettings","yearStartingID","year","startingDayID","yearStartingDOW","startingDoW","currentEra","currentYear","generateDisplayYear","yearLength","calculateYearLength","getDisplayYear","newYear","deltaYear","x","generateNextDisplayYear","generatePreviousDisplayYear","getNextStartingDoW","DoW","getNextStartingID","incrementCurrentYear","calcNextYearData","checkEra","decrementCurrentYear","getPreviousStartingDoW","getPreviousStartingID","calcPreviousYearData","eras","beginning","eraReversed","ending","daysInYear","reversed","settingsArrived","newIndex","DayComponent","dayClick","open","click","EventComponent","expanded","editable","DefaultDoWNames","MonthComponent","daysOfWeek","NewEventComponent","newCyclicalEvent","newYearlyEvent","newMonthlyEvent","newWeeklyEvent","newMonthDOWEvent","newYearMonthDOWEvent","newYearMonthlyEvent","newUniqueEvent","setWindow","eventType","emit","error","message","undefined","clickedDayID","offset","duration","repeatDays","weekOffset","monthOffset","newEventEmit","clearInput","console","log","roundToNearest","month","newCalendarEvent","closeWindow","createEvent","OptionsComponent","calendarService","faArrowAltCircleUp","calendarObject$","getCurrentCalendar$","yearMath$","months$","months","weeks$","leapYears$","leapYearRules","events$","events","activeCalendarSubscription","selectActiveCalendar","activeCalendar","setDirtyCalendar","yearOpen$","monthOpen$","weekOpen$","leapYearOpen$","eventOpen$","jsonOpen$","selectDirtyCalendar","newCalendar","pushCalendar","pushChanges","toggleJSONOptions","EventsEditorComponent","newEventPanelOpen$","newEvent","eventLists","cyclicalEvents","push","pushEventLists","uniqueEvents","yearlyEvents","monthlyEvents","weeklyEvents","monthDOWEvents","yearMonthDOWEvents","yearlyMonthlyEvents","index","splice","item","JsonComponent","jsonService","clipboard","pending","beginCopy","jsonSave","remainingAttempts","attempt","result","copy","setTimeout","destroy","JSONToCalendar","fromjson","calendarToJSON","newUserJSON","LeapYearEditorComponent","leapYearEditingIndex$","newLeapYearPanel$","leapYears","newLeapYear","pushLeapYears","leapYearEditingIndex","MonthEditorComponent","monthEditingIndex$","newMonth","settingsMonths","name","toggleEditMonth","monthEditingIndex","NewEraComponent","newEra","eraCreation","eraName","abbreviation","newEraOrder","resetEmptyEra","toggleNewEra","submit","NewLeapYearRuleComponent","candidateLY","leapYearCreation","resetEmptyLeapYear","leapYearCycles","leapYearOffset","leapYearChange","leapDayMonth","addLY","WeekEditorComponent","dayOfWeekEditingIndex$","newDoWName","pushDoW","daysPerWeek","dayOfWeekEditingIndex","addDoW","YearEditorComponent","defaultYearChange","defaultEraChange","defaultYearChangeSubscription","changeDefaultYear","defaultEraChangeSubscription","changeDefaultEra","newEraPanelOpen$","eraEditingIndex$","applyChange","data","newEraCopy","setYearMath","yearMath","newNumber","eraEditingIndex","ViewComponent","calendarEventService","keyValuePairsService","faBars","optionsAreClosed$","selectOptionsClosed","newEventPanelIsOpen","selectNewEventOpen","newEventDayID","selectNewEventDayID","calendarList$","selectCalendars","currentCalendar$","currentCalendarSubscription","setActiveCalendar","calendarKeyValuePairs$","getCalendarKVP$","calendarID$","selectCalendarIndex","calendars","pullLookupsFromCalendarList","getDefaultSettings","type","toggleSettingsSidebar","WeekComponent","YearComponent","EMPTY_ERA","CyclicalFieldsComponent","event","cyclicalEvent","MonthDOWFieldsComponent","monthlyEvent","MonthlyFieldsComponent","UniqueFieldsComponent","uniqueEvent","WeeklyFieldsComponent","weeklyEvent","YearMonthDowFieldsComponent","yearMonthlyEvent","YearMonthlyFieldsComponent","YearlyFieldsComponent","yearlyEvent","InMemoryDataService","defaultCalendarID","defaultCalendarName","defaultUniqueEvents","defaultCyclicalEvents","defaultWeeklyEvents","defaultMonthlyEvents","defaultYearlyEvents","defaultMonthDOWEvents","defaultYearMonthDOWEvents","defaultYearlyMonthlyEvents","defaultEventList","defaultStartingDayID","defaultStartingDoW","defaultDoW","defaultMonths","defaultEras","defaultCurrentEra","defaultCurrentYear","defaultLeapYearRules","defaultSettings","calendarName","sylrinCalendarID","sylrinCalendarName","sylrinUniqueEvents","sylrinCyclicalEvents","sylrinWeeklyEvents","sylrinMonthlyEvents","sylrinYearlyEvents","sylrinMonthDOWEvents","sylrinYearMonthDOWEvents","sylrinYearlyMonthlyEvents","sylrinEventLists","sylrinStartingDayID","sylrinStartingDoW","sylrinDoW","sylrinMonths","sylrinEras","sylrinCurrentEra","sylrinCurrentYear","sylrinLeapYearRules","sylrinSettings","JsonService","JSON","stringify","json","parse","KeyValuePairsService","forEach","key","EMPTY_LEAP_YEAR","MonthService","needRefresh","yearStartingDayID","monthStartingDayID","monthLength","settingsMonth","monthNumber","currentWeekday","week","weeks","k","days","createWeekProto","weekdayCounts","i","dayOfMonth","dayOfYear","getCyclicalEventList","getUniqueEventList","getWeeklyEventList","getMonthlyEventList","getYearlyEventList","getMonthDOWEventList","getYearMonthDOWEventList","yearMonthlyEvents","getYearMonthlyEventList","weekProto","v","calendarEvent","dayOfWeek","weekdayCount","monthOfYear","newStartingDoW","setCalendarList","setEventLists","setLeapYears","setMonths","setDoW","toggleNewLeapYear","toggleNewEvent","toggleYearOptions","toggleMonthOptions","toggleWeekOptions","toggleLeapYearOptions","toggleEventOptions","toggleOptions","setNewEventPanel","CalendarEffects","actions$","loadCalendars$","requestCalendar$","newCalendarList","OptionsEffects","initialState","calendarList","optionsReducer","state","addCalendar","reducer","action","duplicateIndex","findIndex","c","dirtySettings","newEraPanel","newLeapYearPanel","newEventPanel","yearOptionsOpen","monthOptionsOpen","weekOptionsOpen","leapYearOptionsOpen","eventOptionsOpen","jsonOptionsOpen","optionsOpen","newEventOpen","viewReducer","calendarView","selectOptions","selectNewEraPanelOpen","selectNewLeapYearPanelOpen","selectNewEventPanelOpen","selectEraEditingIndex","selectMonthEditingIndex","selectDayOfWeekEditingIndex","selectLeapYearEditingIndex","selectYearOptionsOpen","selectMonthOptionsOpen","selectWeekOptionsOpen","selectLeapYearOptionsOpen","selectEventOptionsOpen","selectJSONOptionsOpen","selectView","selectOptionsOpen","YearService","monthService","yearNumber","monthLengths","nextDayID","nextDoW","getDisplayMonth","tempMonths","element","rule","sumOfMonths","total","sumOfMonthLengths","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ViewComponent } from './components/view/view.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ViewComponent }\r\n  /*\r\n  ,\r\n  { path: '', redirectTo: '/calendar', pathMatch: 'full'}\r\n  */\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Custom Calendar';\r\n}\r\n","<router-outlet></router-outlet>","import { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CalendarComponent } from './components/calendar/calendar.component';\r\nimport { DayComponent } from './components/day/day.component';\r\nimport { EventComponent } from './components/event/event.component';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\nimport { MonthComponent } from './components/month/month.component';\r\nimport { NewEventComponent } from './components/new-event/new-event.component';\r\nimport { OptionsComponent } from './components/options/options.component';\r\nimport { ViewComponent } from './components/view/view.component';\r\nimport { WeekComponent } from './components/week/week.component';\r\nimport { YearComponent } from './components/year/year.component';\r\nimport { CyclicalFieldsComponent } from './event field components/cyclical-fields/cyclical-fields.component';\r\nimport { YearlyFieldsComponent } from './event field components/yearly-fields/yearly-fields.component';\r\nimport { MonthlyFieldsComponent } from './event field components/monthly-fields/monthly-fields.component';\r\nimport { WeeklyFieldsComponent } from './event field components/weekly-fields/weekly-fields.component';\r\nimport { MonthDOWFieldsComponent } from './event field components/month-dow-fields/month-dow-fields.component';\r\nimport { YearMonthDowFieldsComponent } from './event field components/year-month-dow-fields/year-month-dow-fields.component';\r\nimport { UniqueFieldsComponent } from './event field components/unique-fields/unique-fields.component';\r\nimport { YearMonthlyFieldsComponent } from './event field components/year-monthly-fields/year-monthly-fields.component';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../environments/environment';\r\nimport * as viewReducer from './store/reducers/view.reducer';\r\nimport * as optionsReducer from './store/reducers/options.reducer';\r\nimport * as calendarReducer from './store/reducers/calendar.reducer';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { CalendarEffects } from './store/effects/calendar.effects';\r\nimport { YearEditorComponent } from './components/options/optionsSubsections/year-editor/year-editor.component';\r\nimport { MonthEditorComponent } from './components/options/optionsSubsections/month-editor/month-editor.component';\r\nimport { WeekEditorComponent } from './components/options/optionsSubsections/week-editor/week-editor.component';\r\nimport { LeapYearEditorComponent } from './components/options/optionsSubsections/leap-year-editor/leap-year-editor.component';\r\nimport { EventsEditorComponent } from './components/options/optionsSubsections/events-editor/events-editor.component';\r\nimport { JsonComponent } from './components/options/optionsSubsections/json/json.component';\r\nimport { CalendarSelectorComponent } from './components/calendar-selector/calendar-selector.component';\r\nimport { OptionsEffects } from './store/effects/options.effects';\r\nimport { NewEraComponent } from './components/options/optionsSubsections/new-era/new-era.component';\r\nimport { NewLeapYearRuleComponent } from './components/options/optionsSubsections/new-leap-year-rule/new-leap-year-rule.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CalendarComponent,\r\n    DayComponent,\r\n    MonthComponent,\r\n    OptionsComponent,\r\n    ViewComponent,\r\n    WeekComponent,\r\n    YearComponent,\r\n    NewEventComponent,\r\n    EventComponent,\r\n    CyclicalFieldsComponent,\r\n    YearlyFieldsComponent,\r\n    MonthlyFieldsComponent,\r\n    WeeklyFieldsComponent,\r\n    MonthDOWFieldsComponent,\r\n    YearMonthDowFieldsComponent,\r\n    UniqueFieldsComponent,\r\n    YearMonthlyFieldsComponent,\r\n    YearEditorComponent,\r\n    MonthEditorComponent,\r\n    WeekEditorComponent,\r\n    LeapYearEditorComponent,\r\n    EventsEditorComponent,\r\n    JsonComponent,\r\n    CalendarSelectorComponent,\r\n    NewEraComponent,\r\n    NewLeapYearRuleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    FontAwesomeModule,\r\n\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    // Remove it when a real server is ready to receive requests.\r\n    HttpClientInMemoryWebApiModule.forRoot(\r\n      InMemoryDataService, { dataEncapsulation: false }\r\n    ),\r\n\r\n    BrowserAnimationsModule,\r\n    ClipboardModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    StoreModule.forRoot(\r\n      {\r\n        view: viewReducer.reducer,\r\n        calendar: calendarReducer.reducer,\r\n        options: optionsReducer.reducer },\r\n      {}\r\n      ),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n    EffectsModule.forRoot([CalendarEffects, OptionsEffects]),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarEventService {\n  private dayClicks = new Subject<number>();\n\n  public readonly dayclick$: Observable<number> = this.dayClicks.asObservable();\n\n  dayClick(dayID: number): void {\n    this.dayClicks.next(dayID);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, mapTo } from 'rxjs/operators';\nimport { Calendar } from './Calendar';\nimport { selectCalendars } from './store/selectors/calendar.selector';\nimport { selectCalendarIndex } from './store/selectors/view.selector';\nimport { setActiveCalendar } from './store/actions/calendar.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CalendarService {\n\n  private calenderSettingsURL = 'api/calendars';\n\n  constructor(\n    private http: HttpClient,\n    private store: Store\n    ) { }\n\n  requestCalendar$(): Observable<Calendar[]> {\n    return this.http.get<Calendar[]>(this.calenderSettingsURL);\n  }\n\n  getCurrentCalendar$(): Observable<Calendar> {\n    return combineLatest([this.getCalendarList$(), this.getCurrentCalendarID$()]).pipe(\n      map(([list, id]) => { \n        if (!!list.length) {\n          return list.find(calendar => calendar.calendarID === id);\n        } else {\n          return null;\n        }}),\n      filter(calendar => !!calendar)\n    );\n  }\n\n  getCalendarList$(): Observable<Calendar[]> {\n    return this.store.select(selectCalendars);\n  }\n\n  getCurrentCalendarID$(): Observable<number> {\n    return this.store.select(selectCalendarIndex);\n  }\n}\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { Lookup } from 'src/app/lookup';\nimport { Store } from '@ngrx/store';\nimport { changeCalendar } from 'src/app/store/actions/view.actions';\nimport { selectCalendarIndex } from 'src/app/store/selectors/view.selector';\n\n@Component({\n  selector: 'app-calendar-selector',\n  templateUrl: './calendar-selector.component.html',\n  styleUrls: ['./calendar-selector.component.css']\n})\nexport class CalendarSelectorComponent implements OnInit {\n\n  @Input() lookupArray: Lookup[];\n  @Output() switchTo = new EventEmitter<number>();\n  @Input() activeCalendar$ = this.store.select(selectCalendarIndex);\n\n  constructor(\n    private store: Store,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  changeCalendar(change: MatSelectChange): void {\n    this.store.dispatch(changeCalendar({calendarIndex: change.value}));\n  }\n}\n","<label>Calendar Selection:</label>\n\n<div class=\"Calendar Selector\">\n\n    <mat-form-field>\n        <mat-select \n            (selectionChange)=\"changeCalendar($event)\"\n            [ngModel]=\"activeCalendar$ | async\">\n            <mat-option matInput *ngFor=\"let calendar of lookupArray\" \n                        [value]=\"calendar.key\">\n                    {{calendar.value}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>","import { Component, Input, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { faArrowAltCircleLeft, faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Calendar } from 'src/app/Calendar';\nimport { Year } from '../../year';\nimport { YearService } from '../../year.service';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit, OnDestroy {\n\n  faArrowAltCircleLeft = faArrowAltCircleLeft;\n  faArrowAltCircleRight = faArrowAltCircleRight;\n  @Input() set newSettings(calendar: Calendar) {\n    if (!!calendar) {\n      this.settingsArrived(calendar);\n    }\n  }\n  settingsLoaded = false;\n  eventsLoaded = false;\n  calendarIndex = 0;\n\n  @Input() set changeCalendarIndex(newIndex: number) {\n    if (newIndex >= 0) {\n\n    }\n  }\n\n  @Input() calendar: Calendar;\n\n  currentYear: number;\n  yearStartingID: number;\n  yearStartingDOW: number;\n  yearLength: number;\n  year: Year;\n  currentEra: number;\n\n  userYearChange = new Subject<number>();\n  @ViewChild('newMonth') newMonth;\n\n  userYearChangeSubscription: Subscription;\n\n\n  constructor(\n    private store: Store<any>,\n    private yearService: YearService) {\n      // Debounce search.\n      this.userYearChangeSubscription = this.userYearChange.pipe(\n        debounceTime(400),\n        distinctUntilChanged())\n        .subscribe(value => {\n          this.jumpToYear(value);\n        });\n      }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    if (this.userYearChangeSubscription) {\n      this.userYearChangeSubscription.unsubscribe();\n    }\n  }\n\n  settingsArrived(IncomingSettings): void {\n    if (IncomingSettings) {\n      this.calendar = IncomingSettings;\n      this.yearStartingID = this.calendar.year.startingDayID;\n      this.yearStartingDOW = this.calendar.year.startingDoW;\n      this.currentEra = this.calendar.year.currentEra;\n      this.currentYear = this.calendar.year.currentYear;\n      this.generateDisplayYear();\n    }\n  }\n\n  generateDisplayYear(): void {\n    this.yearLength = this.calculateYearLength();\n    this.year = this.yearService.getDisplayYear( this.yearStartingID,\n      this.yearStartingDOW, this.currentYear, this.calendar\n      );\n  }\n\n  jumpToYear(newYear: number): void {\n    const deltaYear = newYear - this.currentYear;\n    if (deltaYear > 0) {\n      for (let x = 0; x < deltaYear; x++) {\n        this.generateNextDisplayYear();\n      }\n    } else if (deltaYear < 0) {\n      for (let x = 0; x > deltaYear; x--) {\n        this.generatePreviousDisplayYear();\n      }\n    }\n  }\n\n  calcNextYearData(): void {\n    this.yearStartingDOW = this.yearService.getNextStartingDoW(this.yearLength, this.yearStartingDOW, this.calendar.DoW.length);\n    this.yearStartingID = this.yearService.getNextStartingID(this.yearStartingID, this.yearLength);\n    this.incrementCurrentYear();\n  }\n\n  generateNextDisplayYear(): void {\n    this.calcNextYearData();\n    this.checkEra();\n    this.generateDisplayYear();\n  }\n\n  calcPreviousYearData(): void {\n    this.decrementCurrentYear();\n    this.yearLength = this.calculateYearLength();\n    this.yearStartingDOW = this.yearService.getPreviousStartingDoW(this.yearLength, this.yearStartingDOW, this.calendar.DoW.length);\n    this.yearStartingID = this.yearService.getPreviousStartingID(this.yearStartingID, this.yearLength);\n  }\n\n  generatePreviousDisplayYear(): void {\n    this.calcPreviousYearData();\n    this.checkEra();\n    this.generateDisplayYear();\n  }\n\n  checkEra(): void {\n    const eras = this.calendar.year.eras;\n    if ( eras[this.currentEra].beginning) {\n      if ( !this.eraReversed() ) {\n        if ( this.currentYear < eras[this.currentEra].beginning) {\n          this.currentEra--;\n          this.currentYear = eras[this.currentEra].ending;\n        }\n      } else {\n        if ( this.currentYear > eras[this.currentEra].beginning) {\n          this.currentEra--;\n          this.currentYear = eras[this.currentEra].ending;\n        }\n      }\n    }\n    if ( eras[this.currentEra].ending) {\n      if ( !this.eraReversed() ) {\n        if ( this.currentYear > eras[this.currentEra].ending) {\n          this.currentEra++;\n          this.currentYear = eras[this.currentEra].beginning;\n        }\n      } else {\n        if ( this.currentYear < eras[this.currentEra].ending) {\n          this.currentEra++;\n          this.currentYear = eras[this.currentEra].beginning;\n        }\n      }\n    }\n  }\n\n  calculateYearLength(): number {\n    return this.yearService.daysInYear(this.calendar, this.currentYear);\n  }\n\n  eraReversed(): boolean {\n    return this.calendar.year.eras[this.currentEra].reversed;\n  }\n\n  incrementCurrentYear(): void {\n    if (this.calendar.year.eras[this.currentEra].reversed) {\n      this.currentYear--;\n    } else {\n      this.currentYear++;\n    }\n  }\n\n  decrementCurrentYear(): void {\n    if (this.calendar.year.eras[this.currentEra].reversed) {\n      this.currentYear++;\n    } else {\n      this.currentYear--;\n    }\n  }\n}\n","<div class=\"calendar-header\" align=\"center\">\n    <div>\n        <button \n            (click)= \"generatePreviousDisplayYear()\" \n            *ngIf=\"calendar && yearLength <= yearStartingID\" \n            class=\"year-control\">\n            <fa-icon \n                [icon]=\"faArrowAltCircleLeft\" \n                size=\"5x\">\n            </fa-icon>\n        </button>\n    </div>\n    <div class=\"year-sign\" align=\"center\" *ngIf=\"year && year.yearNumber != null && year.yearNumber != undefined && calendar && calendar.year.eras && calendar.year.eras.length > 0 && currentEra != null\"> \n        <input \n        [(ngModel)]=\"year.yearNumber\" \n        (ngModelChange)=\"this.userYearChange.next($event)\"/>\n        {{calendar.year.eras[currentEra].abbreviation}}\n    </div>\n    <div>\n        <button \n            *ngIf=\"calendar\"\n            (click)= \"generateNextDisplayYear()\" \n            class=\"year-control\">\n            <fa-icon \n                [icon]=\"faArrowAltCircleRight\" \n                size=\"5x\">\n            </fa-icon>\n        </button>\n    </div>\n</div>\n\n\n<div>\n    <app-year [year]=\"year\"></app-year>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { setNewEventPanel } from 'src/app/store/actions/view.actions';\nimport { Day } from '../../day';\n\n@Component({\n  selector: 'app-day',\n  templateUrl: './day.component.html',\n  styleUrls: ['./day.component.css']\n})\nexport class DayComponent {\n\n  constructor(\n    private store: Store<any>) {}\n\n  @Input() day: Day;\n  @Output() dayClick = new EventEmitter<number>();\n\n  click(dayID: number): void {\n    this.store.dispatch(setNewEventPanel({open: true, dayID}));\n  }\n}\n","<div class=\"day-button\" (click)=\"click(day.id)\">\n    <div class=\"day-id\">\n        <div class=\"day-of-month\">\n            {{day.dayOfMonth}} \n        </div>\n        <div class=\"day-of-year\">\n            {{day.dayOfYear}}\n        </div>\n    </div>\n    <div class=\"day-content\">\n        <ul>\n            <li *ngFor=\"let cyclicalEvent of day.cyclicalEvents\">\n                {{cyclicalEvent.title}}\n            </li>\n            <li *ngFor=\"let uniqueEvent of day.uniqueEvents\">\n                {{uniqueEvent.title}}\n            </li>\n            <li *ngFor=\"let yearMonthlyEvent of day.yearMonthlyEvents\">\n                {{yearMonthlyEvent.title}}\n            </li>\n            <li *ngFor=\"let yearMonthDOWEvent of day.yearMonthDOWEvents\">\n                {{yearMonthDOWEvent.title}}\n            </li>\n            <li *ngFor=\"let yearlyEvent of day.yearlyEvents\">\n                {{yearlyEvent.title}}\n            </li>\n            <li *ngFor=\"let monthlyEvent of day.monthlyEvents\">\n                {{monthlyEvent.title}}\n            </li>\n            <li *ngFor=\"let weeklyEvent of day.weeklyEvents\">\n                {{weeklyEvent.title}}\n            </li>\n            <li *ngFor=\"let monthDOWEvent of day.monthDOWEvents\">\n                {{monthDOWEvent.title}}\n            </li>\n        </ul>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { CalendarEvent } from '../../calendarEvent';\nimport { EventTypes } from '../../eventTypes';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent {\n\n  @Input() calendarEvent: CalendarEvent;\n  @Input() eventType: EventTypes;\n  expanded = false;\n  @Input() editable = false;\n\n  toggleEvent(): void {\n    this.expanded = !this.expanded;\n  }\n}\n","<div class=\"panel\">\n    <button \n        mat-flat-button\n        color=\"primary\"\n        class=\"toggleEvent\"\n        (click)=\"toggleEvent()\"\n        *ngIf=\"calendarEvent\">\n        {{calendarEvent.title}}</button>\n    <div *ngIf=\"expanded\">\n\n        <div *ngIf=\"eventType === 'cyclical'\">\n            <app-cyclical-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-cyclical-fields>\n        </div>\n\n        <div *ngIf=\"eventType === 'unique'\">\n            <app-unique-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-unique-fields>\n        </div>\n\n        <div *ngIf=\"eventType === 'yearly'\">\n            <app-yearly-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-yearly-fields>\n        </div>\n\n        <div *ngIf=\"eventType === 'monthly'\">\n            <app-monthly-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-monthly-fields>\n        </div>\n\n        <div *ngIf=\"eventType === 'weekly'\">\n            <app-weekly-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-weekly-fields>\n        </div>\n        \n        <div *ngIf=\"eventType === 'monthDOW'\">\n            <app-month-dow-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-month-dow-fields>\n        </div>\n        \n        <div *ngIf=\"eventType === 'yearMonthDOW'\">\n            <app-year-month-dow-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-year-month-dow-fields>\n        </div>\n        \n        <div *ngIf=\"eventType === 'yearMonthly'\">\n            <app-year-monthly-fields\n                [addEvent]=\"calendarEvent\"\n                [editable]=\"editable\"\n            ></app-year-monthly-fields>\n        </div>\n\n    </div>\n</div>","import { Component, Input } from '@angular/core';\r\nimport { Month } from '../../month';\r\n\r\nconst DefaultDoWNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\n@Component({\r\n  selector: 'app-month',\r\n  templateUrl: './month.component.html',\r\n  styleUrls: ['./month.component.css']\r\n})\r\nexport class MonthComponent {\r\n  @Input() month: Month;\r\n  @Input() daysOfWeek: string[] = DefaultDoWNames;\r\n}\r\n","\r\n<h2>\r\n    {{month.name}}\r\n</h2>\r\n<table class=\"month\" align=\"center\">\r\n    <tr *ngIf=daysOfWeek>\r\n        <th *ngFor=\"let name of daysOfWeek\">{{name}}</th>\r\n    </tr>\r\n    <tr *ngFor=\"let week of month.weeks\" class=\"week-repeater\">\r\n        <td *ngFor=\"let day of week.days\" class=\"day-repeater\">\r\n            <div *ngIf=\"day\" class=\"day-container\">\r\n                <app-day [day]=\"day\"></app-day>\r\n            </div>\r\n        </td>\r\n    </tr>\r\n</table>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CyclicalEvent, MonthlyEvent, WeeklyEvent, YearlyEvent, MonthlyDayOfWeekEvent, YearlyMonthlyDayOfWeekEvent, YearlyMonthlyEvent, UniqueEvent } from '../../calendarEvent';\r\n\r\n@Component({\r\n  selector: 'app-new-event',\r\n  templateUrl: './new-event.component.html',\r\n  styleUrls: ['./new-event.component.css']\r\n})\r\nexport class NewEventComponent {\r\n\r\n  @Output() newCyclicalEvent = new EventEmitter<CyclicalEvent>();\r\n  @Output() newYearlyEvent = new EventEmitter<YearlyEvent>();\r\n  @Output() newMonthlyEvent = new EventEmitter<MonthlyEvent>();\r\n  @Output() newWeeklyEvent = new EventEmitter<WeeklyEvent>();\r\n  @Output() newMonthDOWEvent = new EventEmitter<MonthlyDayOfWeekEvent>();\r\n  @Output() newYearMonthDOWEvent = new EventEmitter<YearlyMonthlyDayOfWeekEvent>();\r\n  @Output() newYearMonthlyEvent = new EventEmitter<YearlyMonthlyEvent>();\r\n  @Output() newUniqueEvent = new EventEmitter<UniqueEvent>();\r\n\r\n\r\n  @Output() setWindow = new EventEmitter<boolean>();\r\n\r\n  @Input() eventType = 'cyclical';\r\n  @Input() title: string;\r\n  @Input() offset: number;\r\n  @Input() duration: number;\r\n  @Input() repeatDays: number;\r\n  @Input() roundToNearest: boolean;\r\n  @Input() month: number;\r\n  @Input() weekOffset: number;\r\n  @Input() monthOffset: number;\r\n  @Input() clickedDayID: number;\r\n\r\n  constructor() { }\r\n\r\n  closeWindow(): void {\r\n    this.setWindow.emit(false);\r\n  }\r\n\r\n  createEvent(): void {\r\n    let error = false;\r\n    let message = '';\r\n    if (this.title === null || this.title === '' || this.title === undefined) {\r\n      message += 'Title invalid\\n';\r\n      error = true;\r\n    }\r\n    if (this.eventType === 'unique') {\r\n      if (this.clickedDayID === null || this.clickedDayID < 1 || this.clickedDayID === undefined) {\r\n        message += 'Clicked day ID invalid\\n';\r\n        error = true;\r\n      }\r\n    } else {\r\n      if (this.offset === null || this.offset < 1 || this.offset === undefined) {\r\n        message += 'Offset invalid\\n';\r\n        error = true;\r\n      }\r\n    }\r\n    if (this.duration === null || this.duration < 1 || this.duration === undefined) {\r\n      message += 'Duration invalid\\n';\r\n      error = true;\r\n    }\r\n    if (this.eventType === 'cyclical') {\r\n      if (this.repeatDays === null || this.repeatDays < 1 || this.repeatDays === undefined) {\r\n        message += 'Repeat days invalid\\n';\r\n        error = true;\r\n      }\r\n    }\r\n    if (this.eventType === 'monthDOW') {\r\n      if (this.weekOffset === null || this.weekOffset < 1 || this.weekOffset === undefined) {\r\n        message += 'Month day of week invalid\\n';\r\n        error = true;\r\n      }\r\n    }\r\n    if (this.eventType === 'yearMonthDOW') {\r\n      if (this.monthOffset === null || this.monthOffset < 1 || this.monthOffset === undefined) {\r\n        message += 'Month Offset invalid\\n';\r\n        error = true;\r\n      }\r\n    }\r\n    if (!error) {\r\n      this.newEventEmit();\r\n      this.clearInput();\r\n    } else {\r\n      console.log(message);\r\n    }\r\n  }\r\n\r\n  clearInput(): void {\r\n    this.title = null;\r\n    this.offset = null;\r\n    this.duration = null;\r\n    this.repeatDays = null;\r\n    this.roundToNearest = null;\r\n    this.month = null;\r\n    this.weekOffset = null;\r\n    this.monthOffset = null;\r\n    this.clickedDayID = null;\r\n  }\r\n\r\n  newEventEmit(): void {\r\n    if (this.eventType === 'cyclical') {\r\n      const newCalendarEvent: CyclicalEvent = {\r\n        title: this.title,\r\n        offset: this.offset,\r\n        duration: this.duration,\r\n        repeatDays: this.repeatDays\r\n      };\r\n      this.newCyclicalEvent.emit(newCalendarEvent);\r\n    } else if (this.eventType === 'yearly') {\r\n      const newCalendarEvent: YearlyEvent = {\r\n        title: this.title,\r\n        offset: this.offset,\r\n        duration: this.duration\r\n      };\r\n      this.newYearlyEvent.emit(newCalendarEvent);\r\n    } else if (this.eventType === 'monthly') {\r\n      const newCalendarEvent: MonthlyEvent = {\r\n        title: this.title,\r\n        offset: this.offset,\r\n        duration: this.duration\r\n      };\r\n      this.newMonthlyEvent.emit(newCalendarEvent);\r\n    } else if (this.eventType === 'weekly') {\r\n      const newCalendarEvent: WeeklyEvent = {\r\n        title: this.title,\r\n        offset: this.offset,\r\n        duration: this.duration\r\n      };\r\n      this.newWeeklyEvent.emit(newCalendarEvent);\r\n    } else if (this.eventType === 'monthDOW') {\r\n      const newCalendarEvent: MonthlyDayOfWeekEvent = {\r\n        title: this.title,\r\n        offset: this.offset,\r\n        duration: this.duration,\r\n        weekOffset: this.weekOffset\r\n      };\r\n      this.newMonthDOWEvent.emit(newCalendarEvent);\r\n    } else if (this.eventType === 'yearMonthDOW') {\r\n      const newCalendarEvent: YearlyMonthlyDayOfWeekEvent = {\r\n        title: this.title,\r\n        offset: this.offset,\r\n        duration: this.duration,\r\n        weekOffset: this.weekOffset,\r\n        monthOffset: this.monthOffset\r\n      };\r\n      this.newYearMonthDOWEvent.emit(newCalendarEvent);\r\n    } else if (this.eventType === 'yearMonthly') {\r\n      const newCalendarEvent: YearlyMonthlyEvent = {\r\n        title: this.title,\r\n        offset: this.offset,\r\n        duration: this.duration,\r\n        monthOffset: this.monthOffset\r\n      };\r\n      this.newYearMonthlyEvent.emit(newCalendarEvent);\r\n    } else if (this.eventType === 'unique') {\r\n      const newCalendarEvent: UniqueEvent = {\r\n        title: this.title,\r\n        offset: this.clickedDayID,\r\n        duration: this.duration\r\n      };\r\n      this.newUniqueEvent.emit(newCalendarEvent);\r\n    }\r\n    this.closeWindow();\r\n  }\r\n}\r\n","<div class=\"region\">\r\n    <mat-select id=\"event-type\" [(ngModel)]=\"eventType\">\r\n        <mat-option value=\"unique\">Unique event, only happens once</mat-option>\r\n        <mat-option value=\"cyclical\">Cyclical, independent of calendar</mat-option>\r\n        <mat-option value=\"yearMonthly\">Happens once a year in a given month</mat-option>\r\n        <mat-option value=\"yearly\">Happens once a year</mat-option>\r\n        <mat-option value=\"yearMonthDOW\">Happens once a year, based on the day of the week</mat-option>\r\n        <mat-option value=\"monthly\">Happens once a month</mat-option>\r\n        <mat-option value=\"monthDOW\">Happens every month, based on the day of the week</mat-option>\r\n        <mat-option value=\"weekly\">Happens once a week</mat-option>\r\n        \r\n    </mat-select>\r\n    <input \r\n        matInput\r\n        [ngClass]=\"{\r\n            'needs-attention': !title\r\n        }\" \r\n        [(ngModel)]=\"title\" \r\n        type=\"text\" \r\n        placeholder=\"Title\"/>\r\n    \r\n    <div *ngIf=\"eventType === 'yearly'\">\r\n        <input \r\n            matInput\r\n            [ngClass]=\"{\r\n                'needs-attention': !offset\r\n            }\" \r\n            [(ngModel)]=\"offset\" \r\n            type=\"number\" \r\n            placeholder=\"Day of the year\"/>\r\n    </div>\r\n    \r\n    <div *ngIf=\"eventType === 'yearMonthDOW' || eventType === 'yearMonthly'\">\r\n        <input \r\n            matInput\r\n            [ngClass]=\"{\r\n                'needs-attention': !monthOffset\r\n            }\" \r\n            [(ngModel)]=\"monthOffset\" \r\n            type=\"number\" \r\n            placeholder=\"Month of the year\" \r\n            min=1/>\r\n    </div>\r\n    \r\n    <div *ngIf=\"eventType === 'yearMonthly'\">\r\n        <input \r\n            matInput\r\n            [ngClass]=\"{\r\n                'needs-attention': !offset\r\n            }\" \r\n            [(ngModel)]=\"offset\" \r\n            type=\"number\" \r\n            placeholder=\"Day of the month\" \r\n            min=1/>\r\n    </div>\r\n    \r\n    <div \r\n        *ngIf=\"eventType !== 'yearly'\r\n            && eventType !== 'unique'\r\n            && eventType !== 'yearMonthly'\">\r\n        <input \r\n            matInput\r\n            [ngClass]=\"{\r\n                'needs-attention': !offset\r\n            }\" \r\n            [(ngModel)]=\"offset\" \r\n            type=\"number\" \r\n            placeholder=\"Offset\"/>\r\n    </div>\r\n    \r\n    <div *ngIf=\"eventType === 'unique'\">\r\n        <input \r\n            matInput\r\n            [ngClass]=\"{\r\n                'needs-attention': !clickedDayID\r\n            }\" \r\n            [(ngModel)]=\"clickedDayID\" \r\n            type=\"number\" \r\n            placeholder=\"Day ID\"/>\r\n    </div>\r\n    \r\n    <input \r\n        matInput\r\n        [ngClass]=\"{\r\n            'needs-attention': !duration\r\n        }\" \r\n        [(ngModel)]=\"duration\" \r\n        type=\"number\"\r\n        placeholder=\"Duration of event\" \r\n        min=1/>\r\n\r\n    <div *ngIf=\"eventType === 'cyclical'\">\r\n        <input \r\n            matInput\r\n            [ngClass]=\"{\r\n                'needs-attention': !repeatDays\r\n            }\" \r\n            [(ngModel)]=\"repeatDays\" \r\n            type=\"number\" \r\n            placeholder=\"Length of cycle\" \r\n            min=1/>\r\n    </div>\r\n\r\n    <div *ngIf=\"eventType === 'monthDOW' || eventType === 'yearMonthDOW'\">\r\n        <input \r\n            matInput\r\n            [ngClass]=\"{\r\n                'needs-attention': !weekOffset\r\n            }\" \r\n            [(ngModel)]=\"weekOffset\" \r\n            type=\"number\" \r\n            placeholder=\"Week of the month\" \r\n            min=1/>\r\n    </div>\r\n\r\n    <button \r\n        mat-flat-button\r\n        color=\"primary\"\r\n        class=\"createButton\"\r\n        (click)=\"createEvent()\">\r\n        Create</button>\r\n</div>\r\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { faArrowAltCircleUp } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscriber, Subscription } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { Calendar } from 'src/app/Calendar';\nimport { EventLists } from 'src/app/calendarEvent';\nimport { LeapYear } from 'src/app/leapYear';\nimport { Lookup } from 'src/app/lookup';\nimport { SettingsMonth } from 'src/app/settingsMonth';\nimport { YearMath } from 'src/app/yearMath';\nimport { OptionsSelectors, CalendarSelectors } from '../../store/selectors';\nimport { CalendarService } from 'src/app/calendar.service';\nimport { OptionsActions, CalendarActions } from 'src/app/store/actions';\nimport * as _ from 'lodash';\nimport { toggleOptions } from 'src/app/store/actions/view.actions';\nimport { selectYearOptionsOpen, selectMonthOptionsOpen, selectWeekOptionsOpen, selectLeapYearOptionsOpen, selectEventOptionsOpen, selectJSONOptionsOpen } from 'src/app/store/selectors/options.selector';\nimport { toggleYearOptions, toggleMonthOptions, toggleWeekOptions, toggleLeapYearOptions, toggleEventOptions, toggleJSONOptions } from 'src/app/store/actions/options.actions';\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.css']\n})\nexport class OptionsComponent implements OnDestroy {\n  faArrowAltCircleUp = faArrowAltCircleUp;\n  // @Output() changes = new EventEmitter<Calendar>();\n  /*\n  @Input() set totalSettings(totalSettingsObjects) {\n    this.initializeCalendar(totalSettingsObjects);\n  }\n  */\n\n  @Input() lookupArray: Lookup[];\n  calendarObject$: Observable<Calendar>;\n  yearMath$: Observable<YearMath>;\n  months$: Observable<SettingsMonth[]>;\n  weeks$: Observable<string[]>;\n  leapYears$: Observable<LeapYear[]>;\n  events$: Observable<EventLists>;\n  activeCalendarSubscription: Subscription;\n\n  @Input() calendarName: string;\n\n  yearOpen$: Observable<boolean>;\n  monthOpen$: Observable<boolean>;\n  weekOpen$: Observable<boolean>;\n  leapYearOpen$: Observable<boolean>;\n  eventOpen$: Observable<boolean>;\n  jsonOpen$: Observable<boolean>;\n\n  constructor(\n    private store: Store<any>,\n    private calendarService: CalendarService\n    ) {\n      this.calendarObject$ = this.calendarService.getCurrentCalendar$();\n      this.yearMath$ = this.calendarObject$.pipe(\n        map(calendar => calendar.year)\n      );\n      this.months$ = this.calendarObject$.pipe(\n        map(calendar => calendar.months)\n      );\n      this.weeks$ = this.calendarObject$.pipe(\n        map(calendar => calendar.DoW)\n      );\n      this.leapYears$ = this.calendarObject$.pipe(\n        map(calendar => calendar.leapYearRules)\n      );\n      this.events$ = this.calendarObject$.pipe(\n        map(calendar => calendar.events)\n      );\n      this.activeCalendarSubscription = this.store.select\n      (CalendarSelectors.selectActiveCalendar).subscribe\n        (activeCalendar => this.store.dispatch\n          (OptionsActions.setDirtyCalendar\n            ({calendar: activeCalendar})\n          )\n        );\n        /*\n        // Debounce search.\n        this.userYearChangeSubscription = this.userYearChange.pipe(\n          debounceTime(400),\n          distinctUntilChanged())\n          .subscribe(value => {\n            this.jumpToYear(value);\n          });\n          */\n      this.yearOpen$ = this.store.select(selectYearOptionsOpen);\n      this.monthOpen$ = this.store.select(selectMonthOptionsOpen);\n      this.weekOpen$ = this.store.select(selectWeekOptionsOpen);\n      this.leapYearOpen$ = this.store.select(selectLeapYearOptionsOpen);\n      this.eventOpen$ = this.store.select(selectEventOptionsOpen);\n      this.jsonOpen$ = this.store.select(selectJSONOptionsOpen);\n    }\n\n    ngOnDestroy(): void {\n      if (this.activeCalendarSubscription) {\n        this.activeCalendarSubscription.unsubscribe();\n      }\n    }\n\n  pushChanges(): void {\n    this.store.select(OptionsSelectors.selectDirtyCalendar).pipe(\n      first()\n    ).subscribe(newCalendar =>\n      this.store.dispatch(CalendarActions.pushCalendar({newCalendar}))\n    );\n    this.store.dispatch(toggleOptions({}));\n  }\n\n  toggleYearOptions(): void {\n    this.store.dispatch(toggleYearOptions({}));\n  }\n\n  toggleMonthOptions(): void {\n    this.store.dispatch(toggleMonthOptions({}));\n  }\n\n  toggleWeekOptions(): void {\n    this.store.dispatch(toggleWeekOptions({}));\n  }\n\n  toggleLeapYearOptions(): void {\n    this.store.dispatch(toggleLeapYearOptions({}));\n  }\n\n  toggleEventOptions(): void {\n    this.store.dispatch(toggleEventOptions({}));\n  }\n\n  toggleJSONOptions(): void {\n    this.store.dispatch(toggleJSONOptions({}));\n  }\n}\n","\n<div class=\"settings-panel\">\n\n    <button \n        mat-raised-button\n        color=\"basic\"\n        (click)= \"pushChanges()\"\n        class=\"apply\">\n        <fa-icon [icon]=\"faArrowAltCircleUp\"></fa-icon>\n        Apply\n    </button>\n    \n    <div class=\"column\">\n        <div class=\"settings-option\" *ngIf=\"yearMath$\">\n            <button\n                mat-flat-button\n                color=\"primary\"\n                (click)=\"toggleYearOptions()\">\n                Year Editor</button>\n            <app-year-editor\n                *ngIf=\"yearOpen$ | async\"\n                [setYear]=\"yearMath$ | async\"></app-year-editor>\n        </div>\n\n        <div class=\"settings-option\" *ngIf=\"months$\">\n            <button \n                mat-flat-button\n                color=\"primary\"\n                (click)=\"toggleMonthOptions()\">\n                Month Editor</button>\n            <app-month-editor\n                *ngIf=\"monthOpen$ | async\"\n                [setMonths]=\"months$ | async\"></app-month-editor>\n        </div>\n\n        <div class=\"settings-option\" *ngIf=\"weeks$\">\n            <button \n                mat-flat-button\n                color=\"primary\"\n                (click)=\"toggleWeekOptions()\">\n                Week Editor</button>\n            <app-week-editor\n                *ngIf=\"weekOpen$ | async\"\n                [setDoW]=\"weeks$ | async\"></app-week-editor>\n        </div>\n\n        <div class=\"settings-option\" *ngIf=\"leapYears$\">\n            <button \n                mat-flat-button\n                color=\"primary\"\n                (click)=\"toggleLeapYearOptions()\">\n                Leap Year Rule Editor</button>\n            <app-leap-year-editor\n                *ngIf=\"leapYearOpen$ | async\"\n                [setLeapYear]=\"leapYears$ | async\"></app-leap-year-editor>\n        </div>\n\n        <div class=\"settings-option\" *ngIf=\"events$\">\n            <button \n                mat-flat-button\n                color=\"primary\"\n                (click)=\"toggleEventOptions()\">\n                Event Editor</button>\n            <app-events-editor\n                *ngIf=\"eventOpen$ | async\"\n                [setEventLists]=\"events$ | async\"></app-events-editor>\n        </div>\n\n        <div class=\"settings-option\">\n            <button \n                mat-flat-button\n                color=\"primary\"\n                (click)=\"toggleJSONOptions()\">\n                JSON Options</button>\n            <app-json\n                *ngIf=\"jsonOpen$ | async\"\n                [calendar]=\"calendarObject$ | async\"></app-json>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CyclicalEvent, UniqueEvent, WeeklyEvent, MonthlyEvent, YearlyEvent,\n  MonthlyDayOfWeekEvent, YearlyMonthlyDayOfWeekEvent, YearlyMonthlyEvent, EventLists\n  } from 'src/app/calendarEvent';\nimport { Store } from '@ngrx/store';\nimport { setEventLists, toggleNewEvent } from 'src/app/store/actions/options.actions';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { selectNewEventPanelOpen } from 'src/app/store/selectors/options.selector';\n\n@Component({\n  selector: 'app-events-editor',\n  templateUrl: './events-editor.component.html',\n  styleUrls: ['./events-editor.component.css']\n})\nexport class EventsEditorComponent implements OnInit {\n\n\n  @Input() set setEventLists(eventLists: EventLists) {\n    this.eventLists = _.cloneDeep(eventLists);\n  }\n  eventLists: EventLists;\n  \n  newEventPanelOpen$: Observable<boolean>;\n\n  constructor(\n    private store: Store\n  ) {\n    this.newEventPanelOpen$ = this.store.select(selectNewEventPanelOpen);\n  }\n\n  ngOnInit(): void {\n  }\n\n  createNewCyclicalEvent(newEvent: CyclicalEvent) {\n    this.eventLists.cyclicalEvents.push(newEvent);\n    this.pushEventLists();\n  }\n\n  createNewUniqueEvent(newEvent: UniqueEvent) {\n    this.eventLists.uniqueEvents.push(newEvent);\n    this.pushEventLists();\n  }\n\n  createNewYearlyEvent(newEvent: YearlyEvent) {\n    this.eventLists.yearlyEvents.push(newEvent);\n    this.pushEventLists();\n  }\n\n  createNewMonthlyEvent(newEvent: MonthlyEvent) {\n    this.eventLists.monthlyEvents.push(newEvent);\n    this.pushEventLists();\n  }\n\n  createNewWeeklyEvent(newEvent: WeeklyEvent) {\n    this.eventLists.weeklyEvents.push(newEvent);\n    this.pushEventLists();\n  }\n\n  createNewMonthDOWEvent(newEvent: MonthlyDayOfWeekEvent) {\n    this.eventLists.monthDOWEvents.push(newEvent);\n    this.pushEventLists();\n  }\n\n  createNewYearMonthDOWEvent(newEvent: YearlyMonthlyDayOfWeekEvent) {\n    this.eventLists.yearMonthDOWEvents.push(newEvent);\n    this.pushEventLists();\n  }\n\n  createNewYearlyMonthlyEvent(newEvent: YearlyMonthlyEvent) {\n    this.eventLists.yearlyMonthlyEvents.push(newEvent);\n    this.pushEventLists();\n  }\n  deleteCyclicalEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.cyclicalEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  deleteUniqueEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.uniqueEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  deleteYearlyEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.yearlyEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  deleteMonthlyEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.monthlyEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  deleteWeeklyEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.weeklyEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  deleteMonthDOWEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.monthDOWEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  deleteYearMonthDOWEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.yearMonthDOWEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  deleteYearMonthlyEvent(index: number): void {\n    if (index >= 0) {\n      this.eventLists.yearlyMonthlyEvents.splice(index, 1);\n      this.pushEventLists();\n    }\n  }\n\n  trackArray(index, item) {\n    return index;\n  }\n\n  pushEventLists(): void {\n    this.store.dispatch(setEventLists({events: _.cloneDeep(this.eventLists)}));\n  }\n\n  toggleNewEventPanel(): void {\n    this.store.dispatch(toggleNewEvent({}));\n  }\n}\n","<div *ngIf=\"!!eventLists\">\n    \n    <label>Events:</label>\n\n    <div class=\"input-region\">\n        <div class=\"events-list\">\n            <div class=\"event-category\">\n                Cyclical Events\n                <div class=\"input-fields\" *ngFor=\"let x of eventLists.cyclicalEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'cyclical'\"\n                        [editable]=true\n                    ></app-event>\n                    <button \n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\" \n                        (click)= \"deleteCyclicalEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n            <div class=\"event-category\">\n                Unique Events\n                <div \n                    class=\"input-fields\" \n                    *ngFor=\"let x of eventLists.uniqueEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'unique'\"\n                        [editable]=true\n                    ></app-event>\n                    <button \n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\" \n                        (click)= \"deleteUniqueEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n            <div class=\"event-category\" >\n                Yearly Events\n                <div class=\"input-fields\" *ngFor=\"let x of eventLists.yearlyEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'yearly'\"\n                        [editable]=true></app-event>\n                    <button \n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\"\n                        (click)= \"deleteYearlyEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n            <div class=\"event-category\">\n                Monthly Events\n                <div class=\"input-fields\" *ngFor=\"let x of eventLists.monthlyEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'monthly'\"\n                        [editable]=true\n                    ></app-event>\n                    <button\n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\"\n                        (click)= \"deleteMonthlyEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n            <div class=\"event-category\">\n                Weekly Events\n                <div\n                    class=\"input-fields\"\n                    *ngFor=\"let x of eventLists.weeklyEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'weekly'\"\n                        [editable]=true\n                    ></app-event>\n                    <button \n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\"\n                        (click)= \"deleteWeeklyEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n            <div class=\"event-category\">\n                Monthly Events Based on the Day of the Week\n                <div class=\"input-fields\" *ngFor=\"let x of eventLists.monthDOWEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'monthDOW'\"\n                        [editable]=true\n                    ></app-event>\n                    <button \n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\"\n                        (click)= \"deleteMonthDOWEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n            <div class=\"event-category\">\n                Yearly Events Based on the Month and Day of the Week\n                <div class=\"input-fields\" *ngFor=\"let x of eventLists.yearMonthDOWEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'yearMonthDOW'\"\n                        [editable]=true\n                    ></app-event>\n                    <button\n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\"\n                        (click)= \"deleteYearMonthDOWEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n            <div class=\"event-category\">\n                Yearly Events Based on the Day of the Month\n                <div class=\"input-fields\" *ngFor=\"let x of eventLists.yearlyMonthlyEvents; let idx = index; trackBy: trackArray\">\n                    <app-event \n                        [calendarEvent]=\"x\" \n                        [eventType]=\"'yearMonthly'\"\n                        [editable]=true\n                    ></app-event>\n                    <button\n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"event-delete\"\n                        (click)= \"deleteYearMonthlyEvent(idx)\">\n                        X\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"toggleNewEventPanel()\"\n        class=\"newEventButton\">\n        New Event\n    </button>\n    <div \n        class=\"new-event-region\" \n        *ngIf=\"newEventPanelOpen$ | async\">\n        <app-new-event\n            (newCyclicalEvent)=\"createNewCyclicalEvent($event)\"\n            (newUniqueEvent)=\"createNewUniqueEvent($event)\"\n            (newYearlyEvent)=\"createNewYearlyEvent($event)\"\n            (newMonthlyEvent)=\"createNewMonthlyEvent($event)\"\n            (newWeeklyEvent)=\"createNewWeeklyEvent($event)\"\n            (newMonthlyDOWEvent)=\"createNewMonthDOWEvent($event)\"\n            (newYearlyMonthlyDOWEvent)=\"createNewYearMonthDOWEvent($event)\"\n            (newYearlyMonthlyEvent)=\"createNewYearlyMonthlyEvent($event)\"\n        ></app-new-event>\n    </div>\n</div>","import { Clipboard } from '@angular/cdk/clipboard';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Calendar } from 'src/app/Calendar';\nimport { JsonService } from 'src/app/json.service';\nimport { pushCalendar } from 'src/app/store/actions/calendar.actions';\nimport { CalendarService } from 'src/app/calendar.service';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-json',\n  templateUrl: './json.component.html',\n  styleUrls: ['./json.component.css']\n})\nexport class JsonComponent {\n\n  @Input() set calendar(calendar: Calendar) {\n    this.jsonSave = this.jsonService.calendarToJSON(calendar);\n  }\n  jsonSave: string;\n\n  @Input() fromjson: string;\n\n  constructor(\n    private jsonService: JsonService,\n    private clipboard: Clipboard,\n    private store: Store) { }\n\n\n  clipboardJSON(): void {\n    const pending = this.clipboard.beginCopy(this.jsonSave);\n    let remainingAttempts = 3;\n    const attempt = () => {\n      const result = pending.copy();\n      if (!result && --remainingAttempts) {\n        setTimeout(attempt);\n      } else {\n        // Remember to destroy when you're done!\n        pending.destroy();\n      }\n    };\n    attempt();\n  }\n\n  newUserJSON(): void {\n    this.store.dispatch(pushCalendar({newCalendar: this.jsonService.JSONToCalendar(this.fromjson)}));\n  }\n}\n","<label>Save Calendar as JSON:</label>\n\n<div id=\"jsonRegion\" class=\"input-region\">\n    <button \n        mat-flat-button\n        color=\"primary\"\n        [cdkCopyToClipboard]=\"jsonSave\" \n        [cdkCopyToClipboardAttempts]=\"5\">\n        Copy Settings to Clipboard\n    </button>\n</div>\n\n<div class=\"loadJSON\">\n    <label>Load Calendar from JSON</label>\n    <div class=\"loadControls\">\n        <textarea \n            class=\"jsonArea\"\n            [(ngModel)]=\"fromjson\" \n            placeholder=\"Paste JSON data here\">\n        </textarea>\n        <button \n            mat-flat-button\n            class=\"applyJSON\"\n            color=\"primary\"\n            (click)=\"newUserJSON()\">\n            Apply new JSON\n        </button>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { LeapYear, EMPTY_LEAP_YEAR } from 'src/app/leapYear';\nimport * as _ from 'lodash';\nimport { Store } from '@ngrx/store';\nimport { setLeapYears, leapYearEditingIndex, toggleNewLeapYear } from 'src/app/store/actions/options.actions';\nimport { Observable } from 'rxjs';\nimport { selectLeapYearEditingIndex, selectNewLeapYearPanelOpen } from 'src/app/store/selectors/options.selector';\n\n@Component({\n  selector: 'app-leap-year-editor',\n  templateUrl: './leap-year-editor.component.html',\n  styleUrls: ['./leap-year-editor.component.css']\n})\nexport class LeapYearEditorComponent implements OnInit {\n\n\n  @Input() set setLeapYear(leapYears: LeapYear[]) {\n    this.leapYears = _.cloneDeep(leapYears);\n  }\n\n  leapYears: LeapYear[];\n  leapYearEditingIndex$: Observable<number>;\n  newLeapYearPanel$: Observable<boolean>;\n\n  constructor(\n    private store: Store\n  ) {\n    this.leapYearEditingIndex$ = this.store.select(selectLeapYearEditingIndex);\n    this.newLeapYearPanel$ = this.store.select(selectNewLeapYearPanelOpen);\n  }\n\n  ngOnInit(): void {\n  }\n\n  deleteLY(index: number): void {\n    if (index >= 0) {\n      this.leapYears.splice(index, 1);\n    }\n  }\n\n  createNewLeapYear(newLeapYear: LeapYear) {\n    this.leapYears.push(newLeapYear);\n    this.pushLeapYears();\n  }\n\n  toggleEditLeapYear(index: number): void {\n    this.store.dispatch(leapYearEditingIndex({leapYearEditingIndex: index}));\n  }\n\n  pushLeapYears(): void {\n    this.store.dispatch(setLeapYears({leapYears: _.cloneDeep(this.leapYears)}));\n  }\n\n  toggleNewLeapYear(): void {\n    this.store.dispatch(toggleNewLeapYear({}));\n  }\n\n  trackArray(index, item) {\n    return index;\n  }\n}\n","<div *ngIf=\"!!leapYears\" class=\"container\">\n\n    <label>Leap year rules:</label>\n\n    <table class=\"input-region\">\n        <tr \n        class=\"LYLabels\">\n            <th>Years</th>\n            <th>Offset</th>\n            <th># of days</th>\n            <th>Month</th>\n        </tr>\n        <tr  \n        class=\"LYConfigs\" \n        *ngFor=\"let x of leapYears; let idx = index; trackBy: trackArray\">\n            <td>\n                <input \n                    matInput\n                    class=\"LYRule\" \n                    type=\"number\" \n                    [readonly]=\"idx != (leapYearEditingIndex$ | async)\"\n                    [(ngModel)]=\"leapYears[idx].leapYearCycles\"/>\n            </td>\n            <td>\n                <input \n                    matInput\n                    class=\"LYRule\"\n                    type=\"number\"\n                    [readonly]=\"idx != (leapYearEditingIndex$ | async)\"\n                    [(ngModel)]=\"leapYears[idx].leapYearOffset\"/>\n            </td>\n            <td>\n                <input\n                    matInput\n                    class=\"LYRule\"\n                    type=\"number\"\n                    [readonly]=\"idx != (leapYearEditingIndex$ | async)\"\n                    [(ngModel)]=\"leapYears[idx].leapYearChange\"/>\n            </td>\n            <td>\n                <input\n                    matInput\n                    class=\"LYRule\"\n                    type=\"number\"\n                    [readonly]=\"idx != (leapYearEditingIndex$ | async)\"\n                    [(ngModel)]=\"leapYears[idx].leapDayMonth\"/>\n            </td>\n            <button \n                mat-flat-button\n                color=\"primary\"\n                class=\"day-edit\" \n                *ngIf=\"idx != (leapYearEditingIndex$ | async)\"\n                (click)=\"toggleEditLeapYear(idx)\">\n                edit\n            </button>\n            <button \n                mat-flat-button\n                color=\"primary\"\n                class=\"day-edit\" \n                *ngIf=\"idx == (leapYearEditingIndex$ | async)\"\n                (click)=\"toggleEditLeapYear(-1)\">\n                close\n            </button>\n            <button \n                mat-mini-fab\n                color=\"warn\"\n                class=\"ly-delete\"\n                *ngIf=\"idx == (leapYearEditingIndex$ | async)\" \n                (click)= \"deleteLY(idx)\">\n                X\n            </button>\n        </tr>\n    </table>\n\n    <button\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"toggleNewLeapYear()\">\n        New Leap Year\n    </button>\n    <div class=\"new-leap-year-panel\" *ngIf=\"newLeapYearPanel$ | async\">\n        <app-new-leap-year-rule\n            (leapYearCreation)=\"createNewLeapYear($event)\"\n        ></app-new-leap-year-rule>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as _ from 'lodash';\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { SettingsMonth } from 'src/app/settingsMonth';\nimport { monthEditingIndex, setMonths } from 'src/app/store/actions/options.actions';\nimport { selectMonthEditingIndex } from 'src/app/store/selectors/options.selector';\n\n@Component({\n  selector: 'app-month-editor',\n  templateUrl: './month-editor.component.html',\n  styleUrls: ['./month-editor.component.css']\n})\nexport class MonthEditorComponent implements OnInit {\n\n  @Input() set setMonths(months: SettingsMonth[]) {\n    this.settingsMonths = _.cloneDeep(months);\n  }\n\n  settingsMonths: SettingsMonth[];\n  @Input() newMonth: string;\n  // daysPerYear: number; // not implemented\n\n  monthEditingIndex$: Observable<number>;\n\n  constructor(\n    private store: Store\n  ) {\n    this.monthEditingIndex$ = this.store.select(selectMonthEditingIndex);\n  }\n\n  ngOnInit(): void {\n  }\n\n  addMonth(): void {\n    if (this.newMonth) {\n      this.settingsMonths.push({name: this.newMonth, length: 1});\n      // this.daysPerYear = this.yearService.sumOfMonthLengths(this.settingsMonths);\n      // not implemented\n      this.newMonth = '';\n      this.pushChanges();\n    }\n  }\n\n  deleteMonth(index: number): void {\n    if (index >= 0) {\n      this.settingsMonths.splice(index, 1);\n      // this.daysPerYear = this.yearService.sumOfMonthLengths(this.settingsMonths);\n      // not implemented\n      this.toggleEditMonth(-1);\n    }\n  }\n\n  toggleEditMonth(index: number): void {\n    this.store.dispatch(monthEditingIndex({monthEditingIndex: index}));\n    if (index === -1) {\n      this.pushChanges();\n    }\n  }\n\n  pushChanges(): void {\n    this.store.dispatch(setMonths({settingsMonths: _.cloneDeep(this.settingsMonths)}));\n  }\n\n  trackArray(index, item) {\n    return index;\n  }\n}\n","<div *ngIf=\"settingsMonths\">\n    <label>Months of the year:</label>\n\n    <div class=\"input-region\">\n        <div  *ngFor=\"let x of settingsMonths; let idx = index; trackBy: trackArray\">\n            <mat-form-field\n                class=\"month-row\">\n                <div class=\"input-fields\">\n                    <input\n                        matInput\n                        class=\"month-name\"\n                        type=\"text\"\n                        [readonly]=\"idx != (monthEditingIndex$ | async)\"\n                        [(ngModel)]=\"settingsMonths[idx].name\"/>\n                    <input\n                        matInput\n                        class=\"month-length\"\n                        type=\"number\"\n                        [readonly]=\"idx != (monthEditingIndex$ | async)\"\n                        [(ngModel)]=\"settingsMonths[idx].length\"\n                        min=1/>\n                    <button \n                        mat-flat-button\n                        color=\"primary\"\n                        class=\"month-edit\" \n                        *ngIf=\"idx != (monthEditingIndex$ | async)\"\n                        (click)=\"toggleEditMonth(idx)\">\n                        edit\n                    </button>\n                    <button \n                        mat-flat-button\n                        color=\"primary\"\n                        class=\"month-edit\" \n                        *ngIf=\"idx == (monthEditingIndex$ | async)\"\n                        (click)=\"toggleEditMonth(-1)\">\n                        close\n                    </button>\n                    <button \n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"month-delete\" \n                        *ngIf=\"idx == (monthEditingIndex$ | async)\"\n                        (click)= \"deleteMonth(idx)\">\n                        X\n                    </button>\n                </div>\n            </mat-form-field>\n        </div>\n        <input\n            matInput\n            id=\"new-month-field\"\n            [(ngModel)]=\"newMonth\"\n            type=\"text\"\n            placeholder=\"new month\">\n        <button \n            mat-flat-button\n            color=\"primary\"\n            id=\"submit-new-month\"\n            (click)=\"addMonth()\">\n            add\n        </button>\n        <div *ngIf=\"settingsMonths\">\n            Number of months: {{settingsMonths.length}}\n        </div>\n        <!-- not implemented: \n        <div *ngIf=\"daysPerYear\">\n            Total days in a year: {{daysPerYear}}\n        </div>\n        -->\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { EMPTY_ERA, Era } from 'src/app/era';\nimport { Store } from '@ngrx/store';\nimport { OptionsActions } from 'src/app/store/actions';\n\n@Component({\n  selector: 'app-new-era',\n  templateUrl: './new-era.component.html',\n  styleUrls: ['./new-era.component.css']\n})\nexport class NewEraComponent {\n\n  @Input() eraListLength;\n  @Input() newEra = EMPTY_ERA;\n  @Input() newEraOrder: number;\n  @Output() eraCreation = new EventEmitter<{newEra: Era, newEraOrder: number}>();\n\n  constructor(\n    private store: Store<any>\n  ) { }\n\n  submit(): void {\n    if (\n      this.newEra.eraName !== null &&\n      this.newEra.abbreviation !== null &&\n      this.newEra.beginning !== null &&\n      this.newEra.ending !== null) {\n        this.eraCreation.emit({ newEra: this.newEra, newEraOrder: this.newEraOrder });\n        this.resetEmptyEra();\n      }\n    this.store.dispatch(OptionsActions.toggleNewEra({}));\n  }\n\n  resetEmptyEra(): void {\n    this.newEra.eraName = null;\n    this.newEra.abbreviation = null;\n    this.newEra.beginning = null;\n    this.newEra.ending = null;\n    this.newEra.reversed = null;\n    this.newEraOrder = null;\n  }\n}\n","\n<div class=\"new-era\">\n    New Era:\n    <input \n        matInput\n        class=\"new-era-name\" \n        type=\"text\" \n        [(ngModel)]=\"newEra.eraName\" \n        placeholder=\"Era Name\"\n        autocomplete=\"off\"/>\n    <input \n        matInput\n        class=\"new-era-abbr\"\n        type=\"text\"\n        [(ngModel)]=\"newEra.abbreviation\"\n        placeholder=\"Era Abbreviation\"\n        autocomplete=\"off\"/>\n    <input\n        matInput \n        class=\"new-era-begin\"\n        type=\"number\"\n        [(ngModel)]=\"newEra.beginning\"\n        placeholder=\"Start year number\"\n        autocomplete=\"off\"/>\n    <input \n        matInput\n        class=\"new-era-end\"\n        type=\"number\"\n        [(ngModel)]=\"newEra.ending\"\n        placeholder=\"End year number\"\n        autocomplete=\"off\"/>\n    <div>\n        <label for=\"era-reverse\">Reverse</label>\n        <input id=\"era-reverse\" class=\"new-era-reverse\" type=\"checkbox\" [(ngModel)]=\"newEra.reversed\"/>\n    </div>\n    <input \n        matInput\n        class=\"new-era-index\" \n        type=\"number\" \n        [(ngModel)]=\"newEraOrder\" \n        [min]=\"1\" \n        [max]=\"eraListLength + 1\"\n        placeholder=\"Era placement\"\n        autocomplete=\"off\"/>\n    <button \n        mat-flat-button\n        color=\"primary\"\n        class=\"new-era-create\"\n        (click)= \"submit()\">\n        add\n    </button>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { EMPTY_LEAP_YEAR, LeapYear } from 'src/app/leapYear';\n\n@Component({\n  selector: 'app-new-leap-year-rule',\n  templateUrl: './new-leap-year-rule.component.html',\n  styleUrls: ['./new-leap-year-rule.component.css']\n})\nexport class NewLeapYearRuleComponent {\n\n  constructor() { }\n\n  @Input() candidateLY = EMPTY_LEAP_YEAR;\n\n  @Output() leapYearCreation = new EventEmitter<{newLeapYear: LeapYear}>();\n\n  addLY(): void {\n    this.leapYearCreation.emit({newLeapYear: this.candidateLY});\n    this.resetEmptyLeapYear();\n  }\n\n  resetEmptyLeapYear(): void {\n    this.candidateLY = {\n      leapYearCycles: null,\n      leapYearOffset: null,\n      leapYearChange: null,\n      leapDayMonth: null\n    };\n  }\n\n}\n","<label>new leap year rule</label>\n<div class=\"new-lyr-fields\">\n    <input\n        matInput\n        class=\"newLYRule\"\n        type=\"number\"\n        [(ngModel)]=\"candidateLY.leapYearCycles\"\n        placeholder=\"length of cycle\"/>\n    <input\n        matInput\n        class=\"newLYRule\"\n        type=\"number\"\n        [(ngModel)]=\"candidateLY.leapYearOffset\"\n        placeholder=\"offset\"/>\n    <input\n        matInput\n        class=\"newLYRule\"\n        type=\"number\"\n        [(ngModel)]=\"candidateLY.leapYearChange\"\n        placeholder=\"change in days\"/>\n    <input\n        matInput\n        class=\"newLYRule\"\n        type=\"number\"\n        [(ngModel)]=\"candidateLY.leapDayMonth\"\n        placeholder=\"month affected\"/>\n    <button \n        mat-flat-button\n        color=\"primary\"\n        (click)=\"addLY()\">\n        add\n    </button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport * as _ from 'lodash';\nimport { Store } from '@ngrx/store';\nimport { setDoW, dayOfWeekEditingIndex } from 'src/app/store/actions/options.actions';\nimport { Observable } from 'rxjs';\nimport { selectDayOfWeekEditingIndex } from 'src/app/store/selectors/options.selector';\n\n@Component({\n  selector: 'app-week-editor',\n  templateUrl: './week-editor.component.html',\n  styleUrls: ['./week-editor.component.css']\n})\nexport class WeekEditorComponent implements OnInit {\n\n\n  @Input() set setDoW(DoW: string[]) {\n    this.DoW = _.cloneDeep(DoW);\n  }\n\n  DoW: string[];\n  @Input() newDoWName: string;\n  daysPerWeek;\n  dayOfWeekEditingIndex$: Observable<number>;\n\n  constructor(\n    private store: Store\n  ) {\n    this.dayOfWeekEditingIndex$ = this.store.select(selectDayOfWeekEditingIndex);\n  }\n\n  ngOnInit(): void {\n  }\n\n  addDoW(): void {\n    this.DoW.push(this.newDoWName);\n    this.pushDoW();\n    this.newDoWName = '';\n  }\n\n  deleteDoW(index: number): void {\n    if (index >= 0) {\n      this.DoW.splice(index, 1);\n      this.daysPerWeek = this.DoW.length;\n      this.pushDoW();\n    }\n  }\n\n  toggleEditWeek(index: number): void {\n    this.store.dispatch(dayOfWeekEditingIndex({dayOfWeekEditingIndex: index}));\n  }\n\n  trackArray(index, item) {\n    return index;\n  }\n\n  pushDoW(): void {\n    this.store.dispatch(setDoW({DoW: _.cloneDeep(this.DoW)}));\n  }\n}\n","<label>Days of the week:</label>\n\n<div class=\"input-region\">\n    <div *ngFor=\"let x of DoW; let idx = index; trackBy: trackArray\">\n        <mat-form-field>\n            <div class=\"day\">\n                <input\n                    matInput \n                    type=\"text\" \n                    [readonly]=\"idx != (dayOfWeekEditingIndex$ | async)\"\n                    [(ngModel)]=\"DoW[idx]\"/>\n                <button \n                    mat-flat-button\n                    color=\"primary\"\n                    class=\"day-edit\" \n                    *ngIf=\"idx != (dayOfWeekEditingIndex$ | async)\"\n                    (click)=\"toggleEditWeek(idx)\">\n                    edit\n                </button>\n                <button \n                    mat-flat-button\n                    color=\"primary\"\n                    class=\"day-edit\" \n                    *ngIf=\"idx == (dayOfWeekEditingIndex$ | async)\"\n                    (click)=\"toggleEditWeek(-1)\">\n                    close\n                </button>\n                <button \n                    mat-mini-fab\n                    color=\"warn\"\n                    class=\"dow-delete\"\n                    (click)= \"deleteDoW(idx)\"\n                    *ngIf=\"idx == (dayOfWeekEditingIndex$ | async)\">\n                    X\n                </button>\n            </div>\n        </mat-form-field>\n    </div>\n    <input \n        matInput\n        [(ngModel)]=\"newDoWName\" \n        placeholder=\"new day of the week\"/>\n    <button \n        mat-flat-button\n        color=\"primary\"\n        (click)=\"addDoW()\">\n        add\n    </button>\n    <div *ngIf=\"DoW\">\n        Days in a week: {{DoW.length}}\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as _ from 'lodash';\r\nimport { OptionsActions } from 'src/app/store/actions';\r\nimport { YearMath } from 'src/app/yearMath';\r\nimport { Subscription, Subject, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { selectNewEraPanelOpen, selectEraEditingIndex } from 'src/app/store/selectors/options.selector';\r\n\r\n@Component({\r\n  selector: 'app-year-editor',\r\n  templateUrl: './year-editor.component.html',\r\n  styleUrls: ['./year-editor.component.css']\r\n})\r\nexport class YearEditorComponent implements OnInit {\r\n\r\n  @Input() set setYear(yearMath: YearMath) {\r\n    this.year = _.cloneDeep(yearMath);\r\n  }\r\n  year: YearMath;\r\n  defaultYearChangeSubscription: Subscription;\r\n  defaultYearChange = new Subject<number>();\r\n  defaultEraChangeSubscription: Subscription;\r\n  defaultEraChange = new Subject<number>();\r\n\r\n  newEraPanelOpen$: Observable<boolean>;\r\n  eraEditingIndex$: Observable<number>;\r\n\r\n  constructor(\r\n    private store: Store<any>\r\n  ) {\r\n    // Debounce search.\r\n    this.defaultYearChangeSubscription = this.defaultYearChange.pipe(\r\n      debounceTime(1000),\r\n      distinctUntilChanged())\r\n      .subscribe(value => {\r\n        this.changeDefaultYear(value);\r\n      });\r\n\r\n    // Debounce search.\r\n    this.defaultEraChangeSubscription = this.defaultEraChange.pipe(\r\n      debounceTime(1000),\r\n      distinctUntilChanged())\r\n      .subscribe(value => {\r\n        this.changeDefaultEra(value);\r\n      });\r\n\r\n    this.newEraPanelOpen$ = this.store.select(selectNewEraPanelOpen);\r\n    this.eraEditingIndex$ = this.store.select(selectEraEditingIndex);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  changeDefaultYear(value: number): void {\r\n    this.year.currentYear = value;\r\n    this.applyChange();\r\n  }\r\n\r\n  changeDefaultEra(value: number): void {\r\n    this.year.currentEra = value;\r\n    this.applyChange();\r\n  }\r\n\r\n  createNewEra(data) {\r\n    const newEraCopy = _.cloneDeep(data.newEra);\r\n    this.year.eras.splice((data.newEraOrder - 1), 0, newEraCopy);\r\n    this.applyChange();\r\n  }\r\n\r\n  deleteEra(index: number): void {\r\n    this.year.eras.splice(index, 1);\r\n    this.applyChange();\r\n  }\r\n\r\n  trackArray(index, item) {\r\n    return index;\r\n  }\r\n\r\n  applyChange() {\r\n    this.store.dispatch(OptionsActions.setYearMath({yearMath: _.cloneDeep(this.year)}));\r\n  }\r\n\r\n  toggleNewEraPanel(): void {\r\n    this.store.dispatch(OptionsActions.toggleNewEra({}));\r\n  }\r\n\r\n  changeEraEditingIndex(newNumber: number): void {\r\n    this.store.dispatch(OptionsActions.eraEditingIndex({eraEditingIndex: newNumber}));\r\n  }\r\n}\r\n","<div class=\"settings-option\" *ngIf=\"year\">\n    <label>Year Settings:</label>\n    <div class=\"defaults\">\n        <mat-form-field>\n            <mat-label  >Default Year:</mat-label>\n            <input \n                matInput\n                (ngModelChange)=\"this.defaultYearChange.next($event)\"\n                [ngModel]=\"year.currentYear\">\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label \n                for=\"era\" \n                matInput>\n                Default Era:</mat-label>\n            <mat-select \n                matInput\n                id=\"era\" \n                (ngModelChange)=\"this.defaultEraChange.next($event)\"\n                [ngModel]=\"year.currentEra\">\n                <mat-option matInput\n                    *ngFor=\"let era of year.eras; index as i\" \n                    [value]=i>\n                    {{era.eraName}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        \n        <div>\n            Eras:\n            <div class=\"era-list\">\n                <mat-form-field  *ngFor=\"let x of year.eras; let idx = index; trackBy: trackArray\">\n                    <button\n                        mat-flat-button\n                        color=\"primary\"\n                        *ngIf=\"idx != (eraEditingIndex$ | async)\"\n                        (click)=\"changeEraEditingIndex(idx)\">edit</button>\n                    <button\n                        mat-flat-button\n                        color=\"primary\"\n                        *ngIf=\"idx == (eraEditingIndex$ | async)\"\n                        (click)=\"changeEraEditingIndex(-1); applyChange()\">close</button>\n                    <input \n                        matInput\n                        class=\"era-name\" \n                        type=\"text\" \n                        [(ngModel)]=\"x.eraName\"\n                        [readonly]=\"idx != (eraEditingIndex$ | async)\"/>\n                    <input \n                        matInput\n                        class=\"era-abbr\" \n                        type=\"text\" \n                        [(ngModel)]=\"x.abbreviation\"\n                        [readonly]=\"idx != (eraEditingIndex$ | async)\"/>\n                    <!--\n                        If the era is the first in the list, it needs to not have the beginning field\n                    -->\n                    <div \n                        *ngIf=\"x.beginning\">\n                        <label\n                            for=\"era-begin\">Beginning</label>\n                        <input \n                            id=\"era-begin\"\n                            matInput\n                            class=\"era-begin\" \n                            type=\"number\" \n                            [(ngModel)]=\"x.beginning\"\n                            [readonly]=\"idx != (eraEditingIndex$ | async)\"/>\n                    </div>\n                    <!--\n                        If the era is the last in the list, it needs to not have the ending field\n                    -->\n                    <div *ngIf=\"x.ending\">\n                        <label\n                            for=\"era-end\">Ending</label>\n                        <input \n                            id=\"era-end\"\n                            matInput\n                            class=\"era-end\" \n                            type=\"number\" \n                            [(ngModel)]=\"x.ending\"\n                            [readonly]=\"idx != (eraEditingIndex$ | async)\"/>\n                    </div>\n                    <!--\n                    <input \n                        class=\"era-reverse\"\n                        type=\"checkbox\"\n                        [(ngModel)]=\"x.reversed\"\n                        [readonly]=\"idx != (eraEditingIndex$ | async)\"/>Reversed\n                    -->\n                    <button\n                        mat-mini-fab\n                        color=\"warn\"\n                        class=\"era-delete\" \n                        (click)= \"deleteEra(idx)\"\n                        *ngIf=\"idx == (eraEditingIndex$ | async)\">\n                        X\n                    </button>\n                </mat-form-field>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button\n            mat-flat-button\n            color=\"primary\"\n            (click)=\"toggleNewEraPanel()\">\n            New Era</button>\n        <div class=\"new-era-panel\" *ngIf=\"newEraPanelOpen$ | async\">\n            <app-new-era\n                (eraCreation)=\"createNewEra($event)\"\n                [eraListLength]=\"year.eras.length\"\n            ></app-new-era>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { faArrowAltCircleUp, faBars } from '@fortawesome/free-solid-svg-icons';\nimport * as _ from 'lodash';\nimport { CalendarService } from '../../calendar.service';\nimport { CyclicalEvent, WeeklyEvent, MonthlyEvent, YearlyEvent,\n  YearlyMonthlyEvent, YearlyMonthlyDayOfWeekEvent, UniqueEvent, MonthlyDayOfWeekEvent } from '../../calendarEvent';\nimport { CalendarEventService } from '../../calendar-event.service';\nimport { Store } from '@ngrx/store';\nimport { toggleOptions, setNewEventPanel } from 'src/app/store/actions/view.actions';\nimport * as fromSelectors from '../../store/selectors';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { CalendarSelectors } from '../../store/selectors';\nimport { Calendar } from 'src/app/Calendar';\nimport { Lookup } from 'src/app/lookup';\nimport { KeyValuePairsService } from 'src/app/key-value-pairs.service';\nimport { CalendarActions } from 'src/app/store/actions';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit, OnDestroy {\n\n\n  faArrowAltCircleUp = faArrowAltCircleUp;\n  faBars = faBars;\n\n  // View component no longer has total settings.\n  // Those are in store. Aquire with the calendar Selector.\n\n  newEventPanelIsOpen: Observable<boolean>;\n  newEventDayID: Observable<number>;\n  currentCalendar$: Observable<Calendar>;\n  calendarList$: Observable<Calendar[]>;\n  calendarKeyValuePairs$: Observable<Lookup[]>;\n  currentCalendarSubscription: Subscription;\n  calendarID$: Observable<number>;\n\n  optionsAreClosed$: Observable<boolean>;\n\n  constructor(\n    private store: Store<any>,\n    private calendarService: CalendarService,\n    private calendarEventService: CalendarEventService,\n    private keyValuePairsService: KeyValuePairsService\n    ) {\n      this.optionsAreClosed$ = this.store.select(fromSelectors.ViewSelectors.selectOptionsClosed);\n      this.newEventPanelIsOpen = this.store.select(fromSelectors.ViewSelectors.selectNewEventOpen);\n      this.newEventDayID = this.store.select(fromSelectors.ViewSelectors.selectNewEventDayID);\n      this.calendarList$ = this.store.select(CalendarSelectors.selectCalendars);\n      this.currentCalendar$ = this.calendarService.getCurrentCalendar$();\n      this.currentCalendarSubscription = this.currentCalendar$.subscribe(\n        activeCalendar => this.store.dispatch(CalendarActions.setActiveCalendar({activeCalendar}))\n      );\n      this.calendarKeyValuePairs$ = this.getCalendarKVP$();\n      this.calendarID$ = this.store.select(fromSelectors.ViewSelectors.selectCalendarIndex);\n    }\n\n  getCalendarKVP$(): Observable<Lookup[]> {\n    return this.calendarKeyValuePairs$ = this.calendarList$.pipe(\n      map(calendars =>\n        this.keyValuePairsService.pullLookupsFromCalendarList(calendars))\n    );\n  }\n\n  ngOnInit(): void {\n    // this.store.dispatch({ type: '[View] Load TotalSettings})\n    this.getDefaultSettings();\n  }\n\n  ngOnDestroy(): void {\n    if (this.currentCalendarSubscription) {\n      this.currentCalendarSubscription.unsubscribe();\n    }\n  }\n\n  getDefaultSettings(): void {\n    this.store.dispatch({ type: '[Calendar Page] Load Calendar' });\n  }\n\n  closeEventWindow(): void {\n    this.store.dispatch(setNewEventPanel({open: false, dayID: 0}));\n  }\n\n  toggleSettingsSidebar(): void {\n    this.store.dispatch(toggleOptions({}));\n  }\n}\n","<div class=\"view\">\n    <h1>\n        Custom Calendar\n    </h1>\n\n    <div class=\"sidebarToggle\">\n        <button \n            mat-raised-button\n            color=\"primary\"\n            (click)=\"toggleSettingsSidebar()\">\n            <div\n                class=\"buttonText\">\n                <fa-icon \n                    [icon]=\"faBars\" \n                    size=\"4x\"></fa-icon>\n            </div>\n        </button>\n    </div>\n\n    <div class=\"calendar-selector\">\n        <app-calendar-selector\n            align=\"center\"\n            [lookupArray]=\"calendarKeyValuePairs$ | async\"></app-calendar-selector>\n    </div>\n\n    <app-options\n        [hidden]=\"optionsAreClosed$ | async\"\n    ></app-options>\n\n    <div class=\"calendar-space\" align=\"center\">\n        <app-calendar \n            align=\"center\"\n            [newSettings]=\"currentCalendar$ | async\"\n        ></app-calendar>\n    </div>\n\n    <div class=\"new-event-panel\" \n        *ngIf=\"newEventPanelIsOpen | async\">\n        <div class=\"topBar\">\n            <h3>Create New Event</h3>\n            <button (click)=\"closeEventWindow()\">X</button>\n        </div>\n        <app-new-event\n        (setWindow)=\"closeEventWindow()\"\n        [clickedDayID]=\"newEventDayID | async\"\n        ></app-new-event>\n    </div>\n</div>\n\n<!--\n<button class=\"scroll-to-top\" (click)=\"scrollToTop()\">\n    <fa-icon [icon]=\"faArrowAltCircleUp\" size=\"4x\"></fa-icon>\n</button>\n-->","import { Component, Input } from '@angular/core';\nimport { Week } from '../../week';\n\n@Component({\n  selector: 'app-week',\n  templateUrl: './week.component.html',\n  styleUrls: ['./week.component.css']\n})\nexport class WeekComponent {\n\n  @Input() week: Week;\n\n}\n","\n<td *ngFor=\"let day of week.days\" class=\"day-repeater\">\n    <div *ngIf=\"day\" class=\"day-container\">\n        <app-day [day]=\"day\"></app-day>\n    </div>\n</td>","import { Component, Input } from '@angular/core';\nimport { Year } from '../../year';\n\n\n@Component({\n  selector: 'app-year',\n  templateUrl: './year.component.html',\n  styleUrls: ['./year.component.css']\n})\nexport class YearComponent {\n  @Input() year: Year;\n\n  constructor() { }\n\n}\n","<div *ngIf=\"year && year.months\" class=\"calendar\">\n    <div *ngFor=\"let month of year.months\">\n        <app-month [month]=\"month\" [daysOfWeek]=\"year.DoW\"></app-month>\n    </div>\n</div>","export interface Era {\r\n    eraName: string;\r\n    abbreviation: string;\r\n    beginning?: number;\r\n    ending?: number;\r\n    reversed: boolean;\r\n}\r\n\r\nexport const EMPTY_ERA: Era = {\r\n    eraName: null,\r\n    abbreviation: null,\r\n    beginning: null,\r\n    ending: null,\r\n    reversed: null\r\n};\r\n","import { Component, Input } from '@angular/core';\nimport { CyclicalEvent } from '../../calendarEvent';\n\n@Component({\n  selector: 'app-cyclical-fields',\n  templateUrl: './cyclical-fields.component.html',\n  styleUrls: ['./cyclical-fields.component.css']\n})\nexport class CyclicalFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.cyclicalEvent = event as CyclicalEvent;\n  }\n  cyclicalEvent: CyclicalEvent;\n  @Input() editable = false;\n}\n","<div class=\"input-fields\" *ngIf=\"cyclicalEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\" [(ngModel)]=\"cyclicalEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Offset</label>\n        <input [disabled]=\"!editable\" class=\"input-field\" [(ngModel)]=\"cyclicalEvent.offset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\" [(ngModel)]=\"cyclicalEvent.duration\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Length of Cycle</label>\n        <input [disabled]=\"!editable\" class=\"input-field\" [(ngModel)]=\"cyclicalEvent.duration\"/>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { MonthlyDayOfWeekEvent } from 'src/app/calendarEvent';\n\n@Component({\n  selector: 'app-month-dow-fields',\n  templateUrl: './month-dow-fields.component.html',\n  styleUrls: ['./month-dow-fields.component.css']\n})\nexport class MonthDOWFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.monthlyEvent = event as MonthlyDayOfWeekEvent;\n  }\n  monthlyEvent: MonthlyDayOfWeekEvent;\n  @Input() editable = false;\n\n}\n","<div class=\"input-fields\" *ngIf=\"monthlyEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"title-field\"\n            [(ngModel)]=\"monthlyEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Day of Week</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"offset-field\"\n            [(ngModel)]=\"monthlyEvent.offset\"/>\n    </div>\n    <div class=\"weekOffset\">\n        <label for=\"weekOffset-field\">Week</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"weekOffset-field\"\n            [(ngModel)]=\"monthlyEvent.weekOffset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"duration-field\"\n            [(ngModel)]=\"monthlyEvent.duration\"/>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { MonthlyEvent } from '../../calendarEvent';\n\n@Component({\n  selector: 'app-monthly-fields',\n  templateUrl: './monthly-fields.component.html',\n  styleUrls: ['./monthly-fields.component.css']\n})\nexport class MonthlyFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.monthlyEvent = event as MonthlyEvent;\n  }\n  monthlyEvent: MonthlyEvent;\n  @Input() editable = false;\n\n}\n","<div class=\"input-fields\" *ngIf=\"monthlyEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"title-field\"\n            [(ngModel)]=\"monthlyEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Offset</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"offset-field\"\n            [(ngModel)]=\"monthlyEvent.offset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"duration-field\"\n            [(ngModel)]=\"monthlyEvent.duration\"/>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { UniqueEvent } from 'src/app/calendarEvent';\n\n@Component({\n  selector: 'app-unique-fields',\n  templateUrl: './unique-fields.component.html',\n  styleUrls: ['./unique-fields.component.css']\n})\nexport class UniqueFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.uniqueEvent = event as UniqueEvent;\n  }\n  uniqueEvent: UniqueEvent;\n  @Input() editable = false;\n\n}\n","<div class=\"input-fields\" *ngIf=\"uniqueEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"title-field\"\n            [(ngModel)]=\"uniqueEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Day of Week</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"offset-field\"\n            [(ngModel)]=\"uniqueEvent.offset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"duration-field\"\n            [(ngModel)]=\"uniqueEvent.duration\"/>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { WeeklyEvent } from '../../calendarEvent';\n\n@Component({\n  selector: 'app-weekly-fields',\n  templateUrl: './weekly-fields.component.html',\n  styleUrls: ['./weekly-fields.component.css']\n})\nexport class WeeklyFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.weeklyEvent = event as WeeklyEvent;\n  }\n  weeklyEvent: WeeklyEvent;\n  @Input() editable = false;\n\n}\n","<div class=\"input-fields\" *ngIf=\"weeklyEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"title-field\"\n            [(ngModel)]=\"weeklyEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Offset</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"offset-field\"\n            [(ngModel)]=\"weeklyEvent.offset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"duration-field\"\n            [(ngModel)]=\"weeklyEvent.duration\"/>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { YearlyMonthlyDayOfWeekEvent } from 'src/app/calendarEvent';\n\n@Component({\n  selector: 'app-year-month-dow-fields',\n  templateUrl: './year-month-dow-fields.component.html',\n  styleUrls: ['./year-month-dow-fields.component.css']\n})\nexport class YearMonthDowFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.yearMonthlyEvent = event as YearlyMonthlyDayOfWeekEvent;\n  }\n  yearMonthlyEvent: YearlyMonthlyDayOfWeekEvent;\n  @Input() editable = false;\n\n}\n","<div class=\"input-fields\" *ngIf=\"yearMonthlyEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"title-field\"\n            [(ngModel)]=\"yearMonthlyEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Day of Week</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"offset-field\"\n            [(ngModel)]=\"yearMonthlyEvent.offset\"/>\n    </div>\n    <div class=\"weekOffset\">\n        <label for=\"weekOffset-field\">Week</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"weekOffset-field\"\n            [(ngModel)]=\"yearMonthlyEvent.weekOffset\"/>\n    </div>\n    <div class=\"monthOffset\">\n        <label for=\"monthOffset-field\">Month</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"monthOffset-field\"\n            [(ngModel)]=\"yearMonthlyEvent.monthOffset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"duration-field\"\n            [(ngModel)]=\"yearMonthlyEvent.duration\"/>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { YearlyMonthlyEvent } from 'src/app/calendarEvent';\n\n@Component({\n  selector: 'app-year-monthly-fields',\n  templateUrl: './year-monthly-fields.component.html',\n  styleUrls: ['./year-monthly-fields.component.css']\n})\nexport class YearMonthlyFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.yearMonthlyEvent = event as YearlyMonthlyEvent;\n  }\n  yearMonthlyEvent: YearlyMonthlyEvent;\n  @Input() editable = false;\n\n}\n","<div class=\"input-fields\" *ngIf=\"yearMonthlyEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"title-field\"\n            [(ngModel)]=\"yearMonthlyEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Day of Week</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"offset-field\"\n            [(ngModel)]=\"yearMonthlyEvent.offset\"/>\n    </div>\n    <div class=\"monthOffset\">\n        <label for=\"monthOffset-field\">Month</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"monthOffset-field\"\n            [(ngModel)]=\"yearMonthlyEvent.monthOffset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"duration-field\"\n            [(ngModel)]=\"yearMonthlyEvent.duration\"/>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { YearlyEvent } from '../../calendarEvent';\n\n@Component({\n  selector: 'app-yearly-fields',\n  templateUrl: './yearly-fields.component.html',\n  styleUrls: ['./yearly-fields.component.css']\n})\nexport class YearlyFieldsComponent {\n\n  @Input() set addEvent(event) {\n    this.yearlyEvent = event as YearlyEvent;\n  }\n  yearlyEvent: YearlyEvent;\n  @Input() editable = false;\n\n}\n","<div class=\"input-fields\" *ngIf=\"yearlyEvent\">\n    <div class=\"title\" *ngIf=\"editable\">\n        <label for=\"title-field\">Title</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"title-field\"\n            [(ngModel)]=\"yearlyEvent.title\"/>\n    </div>\n    <div class=\"offset\">\n        <label for=\"offset-field\">Offset</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"offset-field\"\n            [(ngModel)]=\"yearlyEvent.offset\"/>\n    </div>\n    <div class=\"duration\">\n        <label for=\"duration-field\">Duration</label>\n        <input [disabled]=\"!editable\" class=\"input-field\"\n            id=\"duration-field\"\n            [(ngModel)]=\"yearlyEvent.duration\"/>\n    </div>\n</div>\n\n<!--\n    \n<div class=\"roundToNearest\">\n    <label for=\"roundToNearest-field\">Round to nearest</label>\n    <input [disabled]=\"!editable\" class=\"input-field\" \n        id=\"roundToNearest-field\" type=\"checkbox\"\n        [(ngModel)]=\"yearlyEvent.roundToNearest\"/>\n</div>\n<div class=\"month\" *ngIf=\"yearlyEvent.month\">\n    <label for=\"month-field\">Month</label>\n    <input [disabled]=\"!editable\" class=\"input-field\"\n        id=\"month-field\"\n        [(ngModel)]=\"yearlyEvent.month\"/>\n</div>\n\n-->\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { CyclicalEvent, MonthlyDayOfWeekEvent, MonthlyEvent, UniqueEvent, WeeklyEvent,\n  YearlyEvent, YearlyMonthlyDayOfWeekEvent, YearlyMonthlyEvent, EventLists } from './calendarEvent';\nimport { Calendar } from './Calendar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const defaultCalendarID = 0;\n    const defaultCalendarName = 'Gregorian Calendar';\n    const defaultUniqueEvents: UniqueEvent[] = [\n      {title: 'This project\\'s inception', offset: 4000082, duration: 1},\n      {title: 'Marty McFly Travels back to 1955', offset: 3987515, duration: 1}\n    ];\n    const defaultCyclicalEvents: CyclicalEvent[] = [\n      {title: 'Full Moon', offset: 22, duration: 3, repeatDays: 29.530}\n    ];\n    const defaultWeeklyEvents: WeeklyEvent[] = [];\n    const defaultMonthlyEvents: MonthlyEvent[] = [];\n    const defaultYearlyEvents: YearlyEvent[] = [\n    ];\n    const defaultMonthDOWEvents: MonthlyDayOfWeekEvent[] = [];\n    const defaultYearMonthDOWEvents: YearlyMonthlyDayOfWeekEvent[] = [\n      { title: 'MLK Day', duration: 1, offset: 2, weekOffset: 3, monthOffset: 1},\n      { title: 'Presidents\\' Day', duration: 1, offset: 2, weekOffset: 3, monthOffset: 2},\n      { title: 'Labor Day', duration: 1, offset: 2, weekOffset: 1, monthOffset: 9},\n      { title: 'Ocktoberfest', duration: 1, offset: 2, weekOffset: 2, monthOffset: 9},\n      { title: 'Thanksgiving', duration: 1, offset: 5, weekOffset: 4, monthOffset: 11}\n    ];\n\n    const defaultYearlyMonthlyEvents: YearlyMonthlyEvent[] = [\n      { title: 'New Year\\'s Day', duration: 1, offset: 1, monthOffset: 1 },\n      { title: 'Groundhog Day', duration: 1, offset: 2, monthOffset: 2 },\n      { title: 'Darwin Day', duration: 1, offset: 12, monthOffset: 2 },\n      { title: 'Family Day', duration: 1, offset: 18, monthOffset: 2 },\n      { title: 'Saint Valentine\\'s Day', duration: 1, offset: 14, monthOffset: 2 },\n      { title: 'International Women\\'s Day', duration: 1, offset: 8, monthOffset: 3 },\n      { title: 'Saint Patrick\\'s Day', duration: 1, offset: 17, monthOffset: 3 },\n      { title: 'Star Wars Day', duration: 1, offset: 4, monthOffset: 5 },\n      { title: 'Earth Day', duration: 1, offset: 22, monthOffset: 4 },\n      { title: 'King\\'s Day', duration: 1, offset: 27, monthOffset: 4 },\n      { title: 'Floralia', duration: 1, offset: 28, monthOffset: 4 },\n      { title: 'Cinco de Mayo', duration: 1, offset: 5, monthOffset: 5 },\n      { title: 'Take Your Dog to Work Day', duration: 1, offset: 24, monthOffset: 6 },\n      { title: 'Canada Day', duration: 1, offset: 1, monthOffset: 7 },\n      { title: 'Independence Day', duration: 1, offset: 4, monthOffset: 7 },\n      { title: 'Le 14 Juillet', duration: 1, offset: 14, monthOffset: 7 },\n      { title: 'International Talk Like a Pirate Day', duration: 1, offset: 19, monthOffset: 9 },\n      { title: 'Halloween', duration: 1, offset: 31, monthOffset: 10 },\n      { title: 'International Men\\'s Day', duration: 1, offset: 19, monthOffset: 11 },\n      { title: 'Christmas Eve', duration: 1, offset: 24, monthOffset: 12 },\n      { title: 'Christmas Day', duration: 1, offset: 25, monthOffset: 12 },\n      { title: 'New Year\\'s Eve', duration: 1, offset: 31, monthOffset: 12 }\n    ];\n\n    const defaultEventList: EventLists = {\n      uniqueEvents: defaultUniqueEvents,\n      cyclicalEvents: defaultCyclicalEvents,\n      weeklyEvents: defaultWeeklyEvents,\n      monthlyEvents: defaultMonthlyEvents,\n      yearlyEvents: defaultYearlyEvents,\n      monthDOWEvents: defaultMonthDOWEvents,\n      yearMonthDOWEvents: defaultYearMonthDOWEvents,\n      yearlyMonthlyEvents: defaultYearlyMonthlyEvents\n    };\n\n    const defaultStartingDayID = 4000000;\n    const defaultStartingDoW = 3;\n    const defaultDoW = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const defaultMonths = [\n      {name: 'January', length: 31},\n      {name: 'February', length: 28},\n      {name: 'March', length: 31},\n      {name: 'April', length: 30},\n      {name: 'May', length: 31},\n      {name: 'June', length: 30},\n      {name: 'July', length: 31},\n      {name: 'August', length: 31},\n      {name: 'September', length: 30},\n      {name: 'October', length: 31},\n      {name: 'November', length: 30},\n      {name: 'December', length: 31}\n    ];\n    const defaultEras = [\n      {eraName: 'Before Common Era', abbreviation: 'BCE', ending: 1, reversed: true},\n      {eraName: 'Common Era', abbreviation: 'CE', beginning: 1, reversed: false}\n    ];\n    const defaultCurrentEra = 1;\n    const defaultCurrentYear = 2020;\n    const defaultLeapYearRules = [\n      {leapYearCycles: 4, leapYearOffset: 0, leapYearChange: 1, leapDayMonth: 1},\n      {leapYearCycles: 100, leapYearOffset: 0, leapYearChange: -1, leapDayMonth: 1},\n      {leapYearCycles: 400, leapYearOffset: 0, leapYearChange: 1, leapDayMonth: 1},\n    ];\n\n    const defaultSettings: Calendar = {\n      calendarID: defaultCalendarID,\n      calendarName: defaultCalendarName,\n      year: {\n        startingDayID: defaultStartingDayID,\n        startingDoW: defaultStartingDoW,\n        eras: defaultEras,\n        currentEra: defaultCurrentEra,\n        currentYear: defaultCurrentYear\n      },\n      months: defaultMonths,\n      DoW: defaultDoW,\n      leapYearRules: defaultLeapYearRules,\n      events: defaultEventList\n    };\n\n\n\n\n    const sylrinCalendarID = 1;\n    const sylrinCalendarName = 'Shalan Calendar';\n    const sylrinUniqueEvents: UniqueEvent[] = [\n      {title: 'Narder Invaded', offset: 3928209, duration: 1}, // 590 ME\n      {title: 'Nardish Revolution begins', offset: 3934321, duration: 1}, // 600 ME\n      {title: 'Nardish Revolution ends', offset: 3936892, duration: 1}, // 605 ME\n      {title: 'Second Invasion of Narder', offset: 3945868, duration: 1},\n      // summerseve, 620\n      {title: 'Dawn Civil War Begins', offset: 3998922, duration: 1},\n      {title: 'Ver\\'s death', offset: 3999299, duration: 1},\n      {title: 'De Lumine meets Kaiso', offset: 4000261, duration: 1},\n      {title: 'Oubat meets the party', offset: 4000276, duration: 1},\n      {title: 'Oubat joins the party', offset: 4000278, duration: 1},\n      {title: 'Esall and Kullak are rescued', offset: 4000281, duration: 1},\n      {title: 'Death Breaks', offset: 4000282, duration: 1},\n      {title: 'Kullak reveals his motives', offset: 4000284, duration: 1},\n      {title: 'Agna talks with Kullak', offset: 4000285, duration: 1},\n      {title: 'Party seperately reaches Taful', offset: 4000287, duration: 1},\n      {title: 'The Fighting Pits', offset: 4000288, duration: 1},\n      {title: 'Party is ambushed by the Society of Purity', offset: 4000290, duration: 1},\n      {title: 'Party returns to life', offset: 4000291, duration: 1},\n      {title: 'Party is sent out to find a Wyvernstone', offset: 4000295, duration: 1},\n      {title: 'Party is attacked by ogres east of Jiddayd', offset: 4000305, duration: 1},\n      {title: 'Party \\'meets\\' the Catfolk tribe', offset: 4000306, duration: 1},\n      {title: 'Party fights two pixies', offset: 4000308, duration: 1},\n      {title: 'Party escapes the Sacrat Pits', offset: 4000310, duration: 1},\n      {title: 'Party escapes the Thousand Spires', offset: 4000312, duration: 1}\n    ];\n    const sylrinCyclicalEvents: CyclicalEvent[] = [\n      {title: 'Full Itric', offset: 3, duration: 2, repeatDays: 20.415153},\n      {title: 'Full Yristo', offset: 7, duration: 5, repeatDays: 50.741297}\n    ];\n    const sylrinWeeklyEvents: WeeklyEvent[] = [];\n    const sylrinMonthlyEvents: MonthlyEvent[] = [];\n    const sylrinYearlyEvents: YearlyEvent[] = [\n    ];\n    const sylrinMonthDOWEvents: MonthlyDayOfWeekEvent[] = [];\n    const sylrinYearMonthDOWEvents: YearlyMonthlyDayOfWeekEvent[] = [\n      { title: 'Athok\\'s Games', duration: 8, offset: 1, weekOffset: 3, monthOffset: 15}\n    ];\n\n    const sylrinYearlyMonthlyEvents: YearlyMonthlyEvent[] = [\n      { title: 'Omre\\'s Ascension', duration: 1, offset: 27, monthOffset: 4 },\n      { title: 'Djarsday', duration: 1, offset: 31, monthOffset: 9 },\n      { title: 'Nardish Liberation Day', duration: 1, offset: 22, monthOffset: 1 },\n      { title: 'Gadren\\'s Day', duration: 1, offset: 3, monthOffset: 3 },\n      { title: 'Athok\\'s Games', duration: 8, offset: 3, monthOffset: 3 },\n      { title: 'North Summerseve', duration: 1, offset: 28, monthOffset: 4 },\n      { title: 'South Winterseve', duration: 1, offset: 28, monthOffset: 4 },\n      { title: 'North Summersend', duration: 1, offset: 19, monthOffset: 8 },\n      { title: 'South Wintersend', duration: 1, offset: 19, monthOffset: 8 },\n      { title: 'North Autumnfest', duration: 1, offset: 20, monthOffset: 8 },\n      { title: 'South Spring Bloom', duration: 1, offset: 20, monthOffset: 8 },\n      { title: 'North Winterseve', duration: 1, offset: 10, monthOffset: 12 },\n      { title: 'South Summerseve', duration: 1, offset: 10, monthOffset: 12 },\n      { title: 'North Springseve', duration: 1, offset: 40, monthOffset: 15 },\n      { title: 'South Autumnseve', duration: 1, offset: 40, monthOffset: 15 }\n    ];\n\n    const sylrinEventLists: EventLists = {\n      uniqueEvents: sylrinUniqueEvents,\n      cyclicalEvents: sylrinCyclicalEvents,\n      weeklyEvents: sylrinWeeklyEvents,\n      monthlyEvents: sylrinMonthlyEvents,\n      yearlyEvents: sylrinYearlyEvents,\n      monthDOWEvents: sylrinMonthDOWEvents,\n      yearMonthDOWEvents: sylrinYearMonthDOWEvents,\n      yearlyMonthlyEvents: sylrinYearlyMonthlyEvents\n    };\n\n    const sylrinStartingDayID = 4000000;\n    const sylrinStartingDoW = 4;\n    const sylrinDoW = ['Vesday', 'Orsday', 'Wasday', 'Arday', 'Figday', 'Tolday', 'Erday', 'Kesday'];\n    const sylrinMonths =\n      [{name: 'Veskien', length: 40},\n      {name: 'Greywin', length: 39},\n      {name: 'Gilan', length: 40},\n      {name: 'Orkien', length: 39},\n      {name: 'Winen', length: 39},\n      {name: 'Arkien', length: 39},\n      {name: 'Sybil', length: 40},\n      {name: 'Figkien', length: 39},\n      {name: 'Elmirn', length: 39},\n      {name: 'Amedust', length: 39},\n      {name: 'Tolkien', length: 40},\n      {name: 'Cynen', length: 39},\n      {name: 'Nathyen', length: 39},\n      {name: 'Erkien', length: 39},\n      {name: 'Keskien', length: 40}\n    ];\n    const sylrinEras = [\n      {eraName: 'Before Teturic', abbreviation: 'BT', ending: 1, reversed: true},\n      {eraName: 'Age of Ash', abbreviation: 'AoA', beginning: 1, ending:  309, reversed: false},\n      {eraName: 'Magic Era', abbreviation: 'ME', beginning: 1, reversed: false}\n    ];\n    const sylrinCurrentEra = 2;\n    const sylrinCurrentYear = 712;\n    const sylrinLeapYearRules = [\n      {leapYearCycles: 1000, leapYearOffset: 612, leapYearChange: 1, leapDayMonth: 5},\n    ];\n\n    const sylrinSettings: Calendar = {\n      calendarID: sylrinCalendarID,\n      calendarName: sylrinCalendarName,\n      year: {\n        startingDayID: sylrinStartingDayID,\n        startingDoW: sylrinStartingDoW,\n        eras: sylrinEras,\n        currentEra: sylrinCurrentEra,\n        currentYear: sylrinCurrentYear\n      },\n      months: sylrinMonths,\n      DoW: sylrinDoW,\n      leapYearRules: sylrinLeapYearRules,\n      events: sylrinEventLists\n    };\n\n    const calendars = [\n      defaultSettings, sylrinSettings];\n    return {calendars};\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n  // genId(heroes: CalendarEvent[]): number {\n  //   return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { Calendar } from './Calendar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonService {\n\n  constructor() { }\n\n  calendarToJSON(calendar: Calendar): string {\n    return JSON.stringify(calendar);\n  }\n\n  JSONToCalendar(json: string): Calendar {\n    return JSON.parse(json);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Lookup } from './lookup';\nimport { Calendar } from './Calendar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeyValuePairsService {\n\n  constructor() { }\n\n  pullLookupsFromCalendarList(calendars: Calendar[]): Lookup[] {\n    const result: Lookup[] = [];\n    calendars.forEach(calendar =>\n      result.push({key: calendar.calendarID, value: calendar.calendarName}));\n    return result;\n  }\n}\n","export interface LeapYear {\r\n    leapYearCycles: number;\r\n    leapYearOffset: number;\r\n    leapYearChange: number;\r\n    leapDayMonth: number;\r\n}\r\n\r\nexport const EMPTY_LEAP_YEAR: LeapYear = {\r\n    leapYearCycles: null,\r\n    leapYearOffset: null,\r\n    leapYearChange: null,\r\n    leapDayMonth: null\r\n};\r\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Day } from './day';\nimport { Month } from './month';\nimport { CyclicalEvent, WeeklyEvent, MonthlyEvent, YearlyEvent, MonthlyDayOfWeekEvent,\n  YearlyMonthlyDayOfWeekEvent, YearlyMonthlyEvent, UniqueEvent } from './calendarEvent';\nimport { SettingsMonth } from './settingsMonth';\nimport { Calendar } from './Calendar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MonthService {\n\n  @Output() needRefresh = new EventEmitter<any>();\n\n  startingDayID: number;\n  monthLength: number;\n  startingDoW: number;\n\n  constructor(  ) { }\n\n  getDisplayMonth(\n    yearStartingDayID: number, monthStartingDayID: number,\n    monthLength: number, settingsMonth: SettingsMonth, startingDoW: number,\n    daysPerWeek: number, monthNumber: number, calendar: Calendar): Month {\n\n    let currentWeekday = startingDoW;\n    let week = 0;\n    const month = {\n      id: 0,\n      name: settingsMonth.name,\n      weeks: []\n    };\n    for (let k = 0; k < ((monthLength + startingDoW) / daysPerWeek); k++) {\n      month.weeks.push({id: k, days: this.createWeekProto(daysPerWeek)});\n    }\n    const weekdayCounts: number[] = [];\n    for (let x = 0; x < daysPerWeek; x++) {\n      weekdayCounts.push(0);\n    }\n    let i = 0;\n    while (i < monthLength) {\n      const dayOfMonth = i + 1;\n      const dayOfYear = (monthStartingDayID + i) - yearStartingDayID + 1;\n      const events = calendar.events;\n      month.weeks[week].days[currentWeekday] = {\n        id: monthStartingDayID + i,\n        dayOfMonth,\n        dayOfYear,\n        cyclicalEvents: this.getCyclicalEventList(monthStartingDayID + i,\n          events.cyclicalEvents),\n        uniqueEvents: this.getUniqueEventList(monthStartingDayID + dayOfMonth,\n          events.uniqueEvents),\n        weeklyEvents: this.getWeeklyEventList(currentWeekday,\n          events.weeklyEvents),\n        monthlyEvents: this.getMonthlyEventList(dayOfMonth,\n          events.monthlyEvents),\n        yearlyEvents: this.getYearlyEventList(dayOfYear,\n          events.yearlyEvents),\n        monthDOWEvents: this.getMonthDOWEventList(currentWeekday,\n          weekdayCounts[currentWeekday], events.monthDOWEvents),\n        yearMonthDOWEvents: this.getYearMonthDOWEventList(daysPerWeek,\n          currentWeekday, monthNumber, weekdayCounts[currentWeekday],\n          events.yearMonthDOWEvents),\n        yearMonthlyEvents: this.getYearMonthlyEventList(dayOfMonth, monthNumber,\n          events.yearlyMonthlyEvents)\n      };\n      weekdayCounts[currentWeekday]++;\n      /*\n      let message = '';\n      weekdayCounts.forEach(value => message += ('| ' + value + ' |'));\n      console.log(message);\n      */\n      if (currentWeekday === daysPerWeek - 1) {\n        currentWeekday = 0;\n        week++;\n      } else {\n        currentWeekday++;\n      }\n      i++;\n    }\n    return month;\n  }\n\n  createWeekProto(daysPerWeek: number): Day[] {\n    const weekProto: Day[] = [];\n    for (let v = 0; v < daysPerWeek; v++) {\n      weekProto.push(null);\n    }\n    return weekProto;\n  }\n\n  getCyclicalEventList(index: number, cyclicalEvents: CyclicalEvent[]): CyclicalEvent[] {\n    const result: CyclicalEvent[] = [];\n    if (cyclicalEvents) {\n      cyclicalEvents.forEach(calendarEvent => {\n        if (index - calendarEvent.offset >= 0) {\n          if (calendarEvent.repeatDays === 0) {\n            if (index - calendarEvent.offset <= (calendarEvent.duration)) {\n              result.push(calendarEvent);\n            }\n          } else {\n            if ((index - calendarEvent.offset) % calendarEvent.repeatDays <= (calendarEvent.duration)) {\n              result.push(calendarEvent);\n            }\n          }\n        }\n      });\n    }\n    return result;\n  }\n\n  getWeeklyEventList(dayOfWeek: number, weeklyEvents: WeeklyEvent[]): WeeklyEvent[] {\n    const result: WeeklyEvent[] = [];\n    if (weeklyEvents) {\n      weeklyEvents.forEach(calendarEvent => {\n        if (dayOfWeek === (calendarEvent.offset - 1)) {\n          result.push(calendarEvent);\n        }\n      });\n    }\n    return result;\n  }\n\n  getMonthlyEventList(dayOfMonth: number, monthlyEvents: MonthlyEvent[]): MonthlyEvent[] {\n    const result: MonthlyEvent[] = [];\n    if (monthlyEvents) {\n      monthlyEvents.forEach(calendarEvent => {\n        if (dayOfMonth === calendarEvent.offset) {\n          result.push(calendarEvent);\n        }\n      });\n    }\n    return result;\n  }\n\n  getYearlyEventList(dayOfYear: number, yearlyEvents: YearlyEvent[]): YearlyEvent[] {\n    const result: YearlyEvent[] = [];\n    if (yearlyEvents) {\n      yearlyEvents.forEach(calendarEvent => {\n        if (dayOfYear === calendarEvent.offset) {\n          result.push(calendarEvent);\n        }\n      });\n    }\n    return result;\n  }\n\n  getMonthDOWEventList(dayOfWeek: number, weekdayCount: number, monthDOWEvents: MonthlyDayOfWeekEvent[]):\n  MonthlyDayOfWeekEvent[] {\n    const result: MonthlyDayOfWeekEvent[] = [];\n    if (monthDOWEvents) {\n      monthDOWEvents.forEach(calendarEvent => {\n        if (weekdayCount === (calendarEvent.weekOffset - 1)) {\n          if (dayOfWeek === (calendarEvent.offset - 1)) {\n            result.push(calendarEvent);\n          }\n        }\n      });\n    }\n    return result;\n  }\n\n  getYearMonthDOWEventList(daysPerWeek: number, dayOfWeek: number,\n                           monthOfYear: number, weekdayCount: number, yearMonthDOWEvents: YearlyMonthlyDayOfWeekEvent[]):\n                           YearlyMonthlyDayOfWeekEvent[] {\n    const result: YearlyMonthlyDayOfWeekEvent[] = [];\n    if (yearMonthDOWEvents) {\n      yearMonthDOWEvents.forEach(calendarEvent => {\n        if (monthOfYear === (calendarEvent.monthOffset - 1)) {\n          if (weekdayCount === (calendarEvent.weekOffset - 1)) {\n            if (dayOfWeek === (calendarEvent.offset - 1)) {\n              result.push(calendarEvent);\n            }\n          }\n          // check if the start happened less than the duration ago\n          // rework this to use a continuous array to handle duration\n          /*\n          if (weekdayCount >= (calendarEvent.weekOffset - 1)) {\n            const dayOfWeekDifference = (dayOfWeek - calendarEvent.offset);\n            let inBetween = (daysPerWeek * (weekdayCount - calendarEvent.weekOffset));\n            if (dayOfWeekDifference <= 0) { inBetween += daysPerWeek; }\n            const daysSince = (dayOfWeekDifference + inBetween);\n            if ( daysSince <= calendarEvent.duration && daysSince > 0) {\n                result.push(calendarEvent);\n            }\n          }\n          */\n        }\n      });\n    }\n    return result;\n  }\n\n  getUniqueEventList(dayID: number, uniqueEvents: UniqueEvent[]): UniqueEvent[] {\n    const result: UniqueEvent[] = [];\n    if (uniqueEvents) {\n      uniqueEvents.forEach(calendarEvent => {\n        if (dayID === calendarEvent.offset + 1) {\n          result.push(calendarEvent);\n        }\n      });\n    }\n    return result;\n  }\n\n  getYearMonthlyEventList(dayOfMonth: number, monthOfYear: number,\n                          yearMonthlyEvents: YearlyMonthlyEvent[]): YearlyMonthlyEvent[] {\n    const result: YearlyMonthlyEvent[] = [];\n    if (yearMonthlyEvents) {\n      yearMonthlyEvents.forEach(calendarEvent => {\n        if (monthOfYear === (calendarEvent.monthOffset - 1)) {\n          if (dayOfMonth === calendarEvent.offset) {\n            result.push(calendarEvent);\n          }\n        }\n      });\n    }\n    return result;\n  }\n\n  getNextStartingDoW(settingsMonth: SettingsMonth, startingDoW: number, daysPerWeek: number): number {\n    const newStartingDoW: number = (settingsMonth.length + startingDoW) % daysPerWeek;\n    return newStartingDoW;\n  }\n\n  getNextStartingID(startingDayID: number, monthLength: number): number {\n    return startingDayID + monthLength;\n  }\n\n  getPreviousStartingDoW(monthLength: number, startingDoW: number, daysPerWeek: number): number {\n    const newStartingDoW: number = ((startingDoW + daysPerWeek) - (monthLength % daysPerWeek)) % daysPerWeek;\n    return newStartingDoW;\n  }\n\n  getPreviousStartingID(startingDayID: number, monthLength: number): number {\n    return startingDayID - monthLength;\n  }\n}\n","import { createAction, props } from '@ngrx/store';\r\nimport { Calendar } from 'src/app/Calendar';\r\nimport { YearMath } from 'src/app/yearMath';\r\nimport { EventLists } from 'src/app/calendarEvent';\r\nimport { LeapYear } from 'src/app/leapYear';\r\nimport { SettingsMonth } from 'src/app/settingsMonth';\r\n\r\nexport const setActiveCalendar = createAction(\r\n    '[Calendar] Set Active Calendar',\r\n    props<{ activeCalendar: Calendar }>()\r\n);\r\n\r\nexport const pushCalendar = createAction(\r\n    '[Calendar] Push Calendar',\r\n    props<{ newCalendar: Calendar }>()\r\n);\r\n\r\nexport const setCalendarList = createAction(\r\n    '[Calendar] Set Calendar List',\r\n    props<{ newCalendarList: Calendar[] }>()\r\n);\r\n","import * as CalendarActions from './calendar.actions';\r\nimport * as OptionsActions from './options.actions';\r\nimport * as ViewActions from './view.actions';\r\n\r\nexport { CalendarActions };\r\nexport { OptionsActions };\r\nexport { ViewActions };\r\n\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Calendar } from 'src/app/Calendar';\r\nimport { YearMath } from 'src/app/yearMath';\r\nimport { EventLists } from 'src/app/calendarEvent';\r\nimport { LeapYear } from 'src/app/leapYear';\r\nimport { SettingsMonth } from 'src/app/settingsMonth';\r\n\r\nexport const setDirtyCalendar = createAction(\r\n    '[Options] Set Dirty Calendar',\r\n    props<{ calendar: Calendar }>()\r\n);\r\n\r\nexport const setYearMath = createAction(\r\n    '[Options] New Year Math',\r\n    props<{ yearMath: YearMath }>()\r\n);\r\n\r\nexport const setEventLists = createAction(\r\n    '[Options] New Event Lists',\r\n    props<{ events: EventLists }>()\r\n);\r\n\r\nexport const setLeapYears = createAction(\r\n    '[Options] New Leap Year Rule',\r\n    props<{ leapYears: LeapYear[] }>()\r\n);\r\n\r\nexport const setMonths = createAction(\r\n    '[Options] New Month List',\r\n    props<{ settingsMonths: SettingsMonth[] }>()\r\n);\r\n\r\nexport const setDoW = createAction(\r\n    '[Options] New Day of Week List',\r\n    props<{ DoW: string[] }>()\r\n);\r\n\r\nexport const toggleNewEra = createAction(\r\n    '[Options] Toggle New Era',\r\n    props<{ }>()\r\n);\r\n\r\nexport const toggleNewLeapYear = createAction(\r\n    '[Options] Toggle New Leap Year',\r\n    props<{ }>()\r\n);\r\n\r\nexport const toggleNewEvent = createAction(\r\n    '[Options] Toggle New Event',\r\n    props<{ }>()\r\n);\r\n\r\nexport const eraEditingIndex = createAction(\r\n    '[Options] Change Era Editing Index',\r\n    props<{ eraEditingIndex: number }>()\r\n);\r\n\r\nexport const monthEditingIndex = createAction(\r\n    '[Options] Change Month Editing Index',\r\n    props<{ monthEditingIndex: number }>()\r\n);\r\n\r\nexport const dayOfWeekEditingIndex = createAction(\r\n    '[Options] Change Day of Week Editing Index',\r\n    props<{ dayOfWeekEditingIndex: number }>()\r\n);\r\n\r\nexport const leapYearEditingIndex = createAction(\r\n    '[Options] Change Leap Year Editing Index',\r\n    props<{ leapYearEditingIndex: number }>()\r\n);\r\n\r\nexport const toggleYearOptions = createAction(\r\n    '[Options] Toggle Year Options',\r\n    props<{ }>()\r\n);\r\n\r\nexport const toggleMonthOptions = createAction(\r\n    '[Options] Toggle Month Options',\r\n    props<{ }>()\r\n);\r\n\r\nexport const toggleWeekOptions = createAction(\r\n    '[Options] Toggle Week Options',\r\n    props<{ }>()\r\n);\r\n\r\nexport const toggleLeapYearOptions = createAction(\r\n    '[Options] Toggle Leap Year Options',\r\n    props<{ }>()\r\n);\r\n\r\nexport const toggleEventOptions = createAction(\r\n    '[Options] Toggle Event Options',\r\n    props<{ }>()\r\n);\r\n\r\nexport const toggleJSONOptions = createAction(\r\n    '[Options] Toggle JSON Options',\r\n    props<{ }>()\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const toggleOptions = createAction(\r\n    '[View] Toggle Options',\r\n    props<{ }>()\r\n);\r\n\r\nexport const setNewEventPanel = createAction(\r\n    '[View] Toggle New Event Panel',\r\n    props<{ open: boolean, dayID: number }>()\r\n);\r\n\r\nexport const changeCalendar = createAction(\r\n    '[View] Change Calendar',\r\n    props<{ calendarIndex: number }>()\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { CalendarService } from 'src/app/calendar.service';\r\nimport { setCalendarList } from '../actions/calendar.actions';\r\n\r\n@Injectable()\r\nexport class CalendarEffects {\r\n\r\n  constructor(\r\n    private store: Store<any>,\r\n    private actions$: Actions,\r\n    private calendarService: CalendarService\r\n  ) {}\r\n\r\n  @Effect()\r\n  loadCalendars$ = this.actions$.pipe(\r\n    ofType('[Calendar Page] Load Calendar'),\r\n    switchMap(() => this.calendarService.requestCalendar$()),\r\n    map(newCalendarList => setCalendarList({newCalendarList}))\r\n  );\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { map } from 'rxjs/operators';\r\nimport { CalendarService } from 'src/app/calendar.service';\r\nimport { CalendarActions, OptionsActions } from '../actions';\r\n\r\n@Injectable()\r\nexport class OptionsEffects {\r\n\r\n  constructor(\r\n    private store: Store<any>,\r\n    private actions$: Actions,\r\n    private calendarService: CalendarService\r\n  ) {}\r\n\r\n  /*\r\n  @Effect()\r\n  copyCalendars$ = this.actions$.pipe(\r\n    ofType(CalendarActions.setCalendarList),\r\n    map(({newCalendarList: calendars}) =>\r\n        OptionsActions.setDirtyCalendars({calendars} ))\r\n  );\r\n  */\r\n}\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { CalendarActions } from '../actions';\r\nimport { Calendar } from 'src/app/Calendar';\r\n\r\nexport interface State {\r\n    calendarList: Calendar[];\r\n    activeCalendar: Calendar;\r\n}\r\n\r\nexport const initialState: State = {\r\n    calendarList: [],\r\n    activeCalendar: null\r\n};\r\n\r\nconst optionsReducer = createReducer(\r\n    initialState,\r\n\r\n    on(CalendarActions.pushCalendar, (state, {newCalendar}) => ({ ...state, calendarList: addCalendar(state.calendarList, newCalendar)})),\r\n\r\n    on(CalendarActions.setCalendarList, (state, {newCalendarList}) => ({ ...state, calendarList: newCalendarList})),\r\n    on(CalendarActions.setActiveCalendar, (state, {activeCalendar}) => ({...state, activeCalendar}))\r\n);\r\n\r\nexport function reducer(state: State | undefined, action: Action) {\r\n    return optionsReducer(state, action);\r\n}\r\n\r\nexport function addCalendar(calendarList: Calendar[], newCalendar: Calendar): Calendar[] {\r\n    const duplicateIndex = calendarList.findIndex(c => c.calendarID === newCalendar.calendarID);\r\n    if (duplicateIndex !== -1) {\r\n        const copy = [...calendarList];\r\n        copy.splice(duplicateIndex, 1, newCalendar);\r\n        return copy;\r\n    } else {\r\n        return [...calendarList, newCalendar];\r\n    }\r\n}\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { OptionsActions, CalendarActions } from '../actions';\r\nimport { Calendar } from 'src/app/Calendar';\r\n\r\nexport interface State {\r\n    dirtySettings: Calendar;\r\n    newEraPanel: boolean;\r\n    newLeapYearPanel: boolean;\r\n    newEventPanel: boolean;\r\n    eraEditingIndex: number;\r\n    monthEditingIndex: number;\r\n    dayOfWeekEditingIndex: number;\r\n    leapYearEditingIndex: number;\r\n    yearOptionsOpen: boolean;\r\n    monthOptionsOpen: boolean;\r\n    weekOptionsOpen: boolean;\r\n    leapYearOptionsOpen: boolean;\r\n    eventOptionsOpen: boolean;\r\n    jsonOptionsOpen: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n    dirtySettings: null,\r\n    newEraPanel: false,\r\n    newLeapYearPanel: false,\r\n    newEventPanel: false,\r\n    eraEditingIndex: -1,\r\n    monthEditingIndex: -1,\r\n    dayOfWeekEditingIndex: -1,\r\n    leapYearEditingIndex: -1,\r\n    yearOptionsOpen: false,\r\n    monthOptionsOpen: false,\r\n    weekOptionsOpen: false,\r\n    leapYearOptionsOpen: false,\r\n    eventOptionsOpen: false,\r\n    jsonOptionsOpen: false,\r\n};\r\n\r\nconst optionsReducer = createReducer(\r\n    initialState,\r\n    on(OptionsActions.setDirtyCalendar, (state, {calendar}) => ({ ...state, dirtySettings: calendar})),\r\n    on(OptionsActions.setYearMath, (state, {yearMath}) => ({ ...state, dirtySettings:\r\n        {...state.dirtySettings, year: yearMath }})),\r\n    on(OptionsActions.setEventLists, (state, {events}) => ({ ...state, dirtySettings:\r\n        {...state.dirtySettings, events}})),\r\n    on(OptionsActions.setLeapYears, (state, {leapYears}) => ({ ...state, dirtySettings:\r\n        {...state.dirtySettings, leapYears}})),\r\n    on(OptionsActions.setMonths, (state, {settingsMonths}) => ({ ...state, dirtySettings:\r\n        {...state.dirtySettings, months: settingsMonths}})),\r\n    on(OptionsActions.setDoW, (state, {DoW}) => ({ ...state, dirtySettings:\r\n        {...state.dirtySettings, DoW}})),\r\n    on(OptionsActions.toggleNewEra, state => ({ ...state, newEraPanel: !state.newEraPanel})),\r\n    on(OptionsActions.toggleNewEvent, state => ({ ...state, newEventPanel: !state.newEventPanel})),\r\n    on(OptionsActions.toggleNewLeapYear, state => ({ ...state, newLeapYearPanel: !state.newLeapYearPanel})),\r\n    on(OptionsActions.eraEditingIndex, (state, {eraEditingIndex}) => ({ ...state, eraEditingIndex})),\r\n    on(OptionsActions.monthEditingIndex, (state, {monthEditingIndex}) => ({ ...state, monthEditingIndex})),\r\n    on(OptionsActions.dayOfWeekEditingIndex, (state, {dayOfWeekEditingIndex}) => ({ ...state, dayOfWeekEditingIndex})),\r\n    on(OptionsActions.leapYearEditingIndex, (state, {leapYearEditingIndex}) => ({ ...state, leapYearEditingIndex})),\r\n    on(OptionsActions.toggleYearOptions, state => ({ ...state, yearOptionsOpen: !state.yearOptionsOpen})),\r\n    on(OptionsActions.toggleMonthOptions, state => ({ ...state, monthOptionsOpen: !state.monthOptionsOpen})),\r\n    on(OptionsActions.toggleWeekOptions, state => ({ ...state, weekOptionsOpen: !state.weekOptionsOpen})),\r\n    on(OptionsActions.toggleLeapYearOptions, state => ({ ...state, leapYearOptionsOpen: !state.leapYearOptionsOpen})),\r\n    on(OptionsActions.toggleEventOptions, state => ({ ...state, eventOptionsOpen: !state.eventOptionsOpen})),\r\n    on(OptionsActions.toggleJSONOptions, state => ({ ...state, jsonOptionsOpen: !state.jsonOptionsOpen})),\r\n\r\n);\r\n\r\nexport function reducer(state: State | undefined, action: Action) {\r\n    return optionsReducer(state, action);\r\n}\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { ViewActions } from '../actions';\r\n\r\nexport interface State {\r\n    optionsOpen: false;\r\n    newEventOpen: false;\r\n    dayID: number;\r\n    calendarIndex: number;\r\n}\r\n\r\nexport const initialState: State = {\r\n    optionsOpen: false,\r\n    newEventOpen: false,\r\n    dayID: 0,\r\n    calendarIndex: 0,\r\n};\r\n\r\nconst viewReducer = createReducer(\r\n    initialState,\r\n    on(ViewActions.toggleOptions, state => ({ ...state, optionsOpen: !state.optionsOpen})),\r\n    on(ViewActions.setNewEventPanel, (state, {open, dayID}) => ({ ...state, newEventOpen: open, dayID })),\r\n    on(ViewActions.changeCalendar, (state, {calendarIndex}) => ({ ...state, calendarIndex })),\r\n);\r\n\r\nexport function reducer(state: State | undefined, action: Action) {\r\n    return viewReducer(state, action);\r\n}\r\n","import { createSelector } from '@ngrx/store';\r\nimport { State } from '../reducers/calendar.reducer';\r\n\r\nexport interface AppState {\r\n    calendar: State;\r\n}\r\n\r\nexport const calendarView = (state: AppState) => state.calendar;\r\n\r\nexport const selectCalendars = createSelector(\r\n    calendarView,\r\n    ( state: State ) => {\r\n        return state.calendarList;\r\n    }\r\n);\r\n\r\nexport const selectActiveCalendar = createSelector(\r\n    calendarView,\r\n    ( state: State ) => {\r\n        return state.activeCalendar;\r\n    }\r\n);\r\n","import * as CalendarSelectors from './calendar.selector';\r\nimport * as OptionsSelectors from './options.selector';\r\nimport * as ViewSelectors from './view.selector';\r\n\r\nexport { CalendarSelectors };\r\nexport { OptionsSelectors };\r\nexport { ViewSelectors };\r\n\r\n","import { createSelector } from '@ngrx/store';\r\nimport { State } from '../reducers/options.reducer';\r\n\r\nexport interface AppState {\r\n    options: State;\r\n}\r\n\r\nexport const selectOptions = (state: AppState) => state.options;\r\n\r\n\r\nexport const selectDirtyCalendar = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.dirtySettings\r\n);\r\n\r\nexport const selectNewEraPanelOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.newEraPanel\r\n);\r\n\r\nexport const selectNewLeapYearPanelOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.newLeapYearPanel\r\n);\r\n\r\nexport const selectNewEventPanelOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.newEventPanel\r\n);\r\n\r\nexport const selectEraEditingIndex = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.eraEditingIndex\r\n);\r\n\r\nexport const selectMonthEditingIndex = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.monthEditingIndex\r\n);\r\n\r\nexport const selectDayOfWeekEditingIndex = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.dayOfWeekEditingIndex\r\n);\r\n\r\nexport const selectLeapYearEditingIndex = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.leapYearEditingIndex\r\n);\r\n\r\nexport const selectYearOptionsOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.yearOptionsOpen\r\n);\r\n\r\nexport const selectMonthOptionsOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.monthOptionsOpen\r\n);\r\n\r\nexport const selectWeekOptionsOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.weekOptionsOpen\r\n);\r\n\r\nexport const selectLeapYearOptionsOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.leapYearOptionsOpen\r\n);\r\n\r\nexport const selectEventOptionsOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.eventOptionsOpen\r\n);\r\n\r\nexport const selectJSONOptionsOpen = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.jsonOptionsOpen\r\n);\r\n\r\n\r\n/*\r\nexport const selectCurrentID = createSelector(\r\n    selectOptions,\r\n    ( state: State ) => state.currentCalendarID\r\n);\r\n*/\r\n","import { createSelector } from '@ngrx/store';\r\nimport { State } from '../reducers/view.reducer';\r\nimport { calendarView, selectCalendars } from './calendar.selector';\r\n\r\nexport interface AppState {\r\n    view: State;\r\n}\r\n\r\nexport const selectView = (state: AppState) => state.view;\r\n\r\nexport const selectOptionsOpen = createSelector(\r\n    selectView,\r\n    ( state: State ) => state.optionsOpen\r\n);\r\n\r\nexport const selectOptionsClosed = createSelector(\r\n    selectView,\r\n    ( state: State ) => !state.optionsOpen\r\n);\r\n\r\nexport const selectNewEventOpen = createSelector(\r\n    selectView,\r\n    ( state: State ) => state.newEventOpen\r\n);\r\n\r\nexport const selectNewEventDayID = createSelector(\r\n    selectView,\r\n    ( state: State ) => state.dayID\r\n);\r\n\r\nexport const selectCalendarIndex = createSelector(\r\n    selectView,\r\n    ( state: State ) => state.calendarIndex\r\n);\r\n","import { Injectable } from '@angular/core';\nimport { MonthService } from './month.service';\nimport { Year } from './year';\nimport { LeapYear } from './leapYear';\nimport { SettingsMonth } from './settingsMonth';\nimport { Calendar } from './Calendar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YearService {\n\n  constructor(\n    private monthService: MonthService) { }\n\n\n  getDisplayYear(\n    startingDayID: number, startingDoW: number, yearNumber: number,\n    calendar: Calendar\n    ): Year {\n    const year = {\n      id: 0,\n      yearNumber,\n      months: [],\n      DoW: calendar.DoW,\n    };\n    const months = calendar.months;\n    const monthLengths = this.leapYearChange(yearNumber, months, calendar.leapYearRules);\n    let nextDayID = startingDayID;\n    let nextDoW = startingDoW;\n    let month = 0;\n    while (month < calendar.months.length) { // again, number of months in the year\n      year.months.push(this.monthService.getDisplayMonth(startingDayID,\n        nextDayID, monthLengths[month], months[month], nextDoW, calendar.DoW.length, month, calendar));\n\n      nextDayID = this.monthService.getNextStartingID(nextDayID, monthLengths[month]);\n\n      nextDoW = this.monthService.getNextStartingDoW(months[month], nextDoW, calendar.DoW.length);\n\n      month++;\n    }\n    return year;\n  }\n\n  leapYearChange(yearNumber: number, months: SettingsMonth[], leapYears: LeapYear[]): number[] {\n      const tempMonths: number[] = [];\n      months.forEach(element => {\n        tempMonths.push(element.length);\n      });\n      if (leapYears) {\n        // if there are rules to follow\n        for (let rule = 0; rule < leapYears.length; rule++) {\n          // for each rule\n          if ((yearNumber - leapYears[rule].leapYearOffset) % leapYears[rule].leapYearCycles === 0) {\n            // if the year is in one of the rule's leap years\n            for (let month = 0; month < tempMonths.length; month++) {\n              // check each month\n              if (leapYears[rule].leapDayMonth === month) {\n                // if the month is the right month for a rule\n                tempMonths[month] += leapYears[rule].leapYearChange;\n              }\n            }\n          }\n        }\n      }\n      return tempMonths;\n    }\n\n  getNextStartingDoW(yearLength: number, startingDoW: number, daysPerWeek: number): number {\n    const newStartingDoW: number = (yearLength + startingDoW) % daysPerWeek;\n    return newStartingDoW;\n  }\n\n  getNextStartingID(startingDayID: number, yearLength: number): number {\n    return startingDayID + yearLength;\n  }\n\n  getPreviousStartingDoW(yearLength: number, startingDoW: number, daysPerWeek: number): number {\n    const newStartingDoW: number = ((startingDoW + daysPerWeek) - (yearLength % daysPerWeek)) % daysPerWeek;\n    return newStartingDoW;\n  }\n\n  getPreviousStartingID(startingDayID: number, yearLength: number): number {\n    return startingDayID - yearLength;\n  }\n\n  sumOfMonthLengths(settingsMonths: SettingsMonth[]): number {\n    let sumOfMonths = 0;\n    if (settingsMonths.length > 0) { // this is the number of elements in the array\n      settingsMonths.forEach(element => {\n        sumOfMonths += element.length; // this is the element's length value\n      });\n    }\n    return sumOfMonths;\n  }\n\n  daysInYear(calendar: Calendar, yearNumber: number): number {\n    let total = this.sumOfMonthLengths(calendar.months);\n    const leapYearRules = calendar.leapYearRules;\n    if (leapYearRules) {\n      for (let i = 0; i < leapYearRules.length; i++) {\n        if ((yearNumber - leapYearRules[i].leapYearOffset) % leapYearRules[i].leapYearCycles === 0) {\n          total += leapYearRules[i].leapYearChange;\n        }\n      }\n    }\n    return total;\n  }\n\n  isThisLeapYear(\n    yearNumber: number, leapYears: LeapYear[]): boolean {\n    for (let i = 0; i < leapYears.length; i++) {\n      if (yearNumber && leapYears[i].leapYearCycles && leapYears[i].leapYearOffset) {\n        if ((yearNumber - leapYears[i].leapYearOffset) % leapYears[i].leapYearCycles) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}